*****************************************
Assembler and Date    : version 6.1: (11-09-21)
Program size          : 16272
----------
Asm  file name        : MasterTemplatefull.asm
List file name        : MasterTemplatefull.lst
----------
       Hex  file name : MasterTemplatefull.hex
       COE  file name : MasterTemplatefull.coe
       MEM  file name : MasterTemplatefull.mem
Altera Mif  file name : MasterTemplatefull_alt.mif
Xilinx Mif  file name : MasterTemplatefull_xil.mif
*****************************************

Labels and Defines:
      APPREG_00: 0100 
      APPREG_10: 0120 
      BASEREGIO: 0000 
      BOOT_ADDR: 3f00 
       CHARFILL: 002d 
             CR: 000d 
           CTLD: 0004 
           CTLE: 0005 
           CTLI: 0009 
           CTLL: 000c 
           CTLP: 0010 
           CTLR: 0012 
           CTLS: 0013 
           CTLX: 0003 
           CTLZ: 001a 
           CTL_: 001f 
           DATE: 0001 
         ERL_IX: 0005 
          ER_IX: 0003 
            ESC: 001b 
            ETX: 0003 
             FF: 000c 
       GPREG_00: 0000 
       GPREG_01: 0001 
       GPREG_02: 0002 
       GPREG_03: 0003 
       GPREG_04: 0004 
       GPREG_05: 0005 
       GPREG_06: 0006 
       GPREG_07: 0007 
       GPREG_08: 0008 
       GPREG_09: 0009 
       GPREG_0a: 000a 
       GPREG_0b: 000b 
       GPREG_0c: 000c 
       GPREG_0d: 000d 
       GPREG_0e: 000e 
       GPREG_0f: 000f 
           HOUR: 0000 
         IRL_IX: 0004 
          IR_IX: 0002 
       IR_IX_LN: 0001 
             LF: 000a 
      MAIN_ADDR: 0010 
         MINUTE: 0000 
          MONTH: 0001 
           NULL: 0000 
        NUMFILL: 0005 
      PCODE_MSK: 0002 
      PCODE_NSK: fffd 
     RESET_ADDR: 0000 
         RXDVLD: 0080 
         RXEMPT: 0002 
          RXERR: 0008 
         RXFULL: 0004 
      SCOPE_MSK: 3000 
      SCOPE_NSK: cfff 
        SECONDS: 0000 
         SIGNED: 8000 
            SPC: 0020 
          SR_IX: 0000 
   STACK_LENGTH: 0040 
     TARGET_MSK: 0001 
     TARGET_NSK: fffe 
            TP1: 0001 
          TP1_2: 0011 
            TP2: 0010 
      TRIGS_MSK: c000 
      TRIGS_NSK: 3fff 
         TXEMPT: 0020 
         TXFULL: 0040 
        UARTDAT: 0010 
        UARTSTA: 0011 
      USRSW_MSK: 0000 
      USRSW_NSK: ffff 
           YEAR: 07e6 
        a_geta1: 0155 
        a_geta2: 015b 
       a_getadr: 0150 
       a_getend: 0183 
        a_getex: 0181 
       a_getmem: 0174 
       a_getval: 0165 
         a_ones: 01ba 
         a_quit: 0257 
       a_regdat: 01a5 
       a_setadd: 0189 
      a_setadd2: 01a4 
           a_w1: 01de 
           a_w2: 01ef 
           a_w3: 0201 
           a_w4: 0212 
           a_w5: 0225 
           a_w6: 022f 
           a_w7: 0239 
           a_w8: 0243 
           a_w9: 0250 
         a_wend: 0251 
        a_wrout: 01ce 
        a_wrval: 01bf 
       a_wrval1: 01a8 
       a_wrval2: 01ad 
       appset_m: 0c4c 
        asc2hex: 040d 
          bitop: 11bc 
        boot_ch: 3f08 
        boot_fh: 3f1a 
         boot_p: 3f03 
        boot_p0: 3f1c 
        boot_p1: 3f1e 
        boot_p2: 3f21 
        boot_p3: 3f22 
        boot_p4: 3f36 
       boot_p4b: 3f42 
        boot_p5: 3f4a 
        boot_p6: 3f4e 
        boot_p7: 3f50 
         boot_r: 3f60 
        boot_r1: 3f64 
        boot_r2: 3f67 
        boot_r3: 3f76 
        boot_r4: 3f80 
        bufdum1: 02f7 
        bufdum2: 02f9 
        bufdump: 02ec 
       bufdump0: 02ee 
      buff_addr: 11c0 
     buff_addrx: 11c2 
       buff_inc: 11c4 
       buff_len: 11c1 
     buff_value: 11c3 
        chkstat: 03cb 
        chome_m: 06f6 
         clrval: 0149 
          cls_m: 06f0 
       clscreen: 00b8 
      clscreen2: 00c6 
        cvalue1: 11b6 
        cvalue2: 11b7 
       d_appset: 00d2 
        d_areg1: 00fa 
        d_aregs: 00f1 
         d_base: 0132 
        d_debug: 00de 
         d_help: 00e5 
        d_helpa: 00eb 
         d_mema: 0105 
         d_memb: 011f 
      d_membyte: 0129 
        d_memof: 0118 
        d_memon: 0112 
      d_memword: 012b 
         d_menu: 00c7 
      d_nothing: 0141 
      d_pagenum: 052e 
     d_pagenum2: 0532 
     d_pagenum3: 053b 
        d_pcode: 050b 
       d_prgver: 0091 
      d_prgver2: 009e 
       d_rtcval: 009f 
      d_rtcval2: 00b3 
       d_scpsrc: 04c5 
       d_sysset: 00d8 
       d_target: 04f1 
      d_target2: 04fb 
       d_trgsrc: 04da 
       d_txpage: 013d 
        dbugptr: 11d8 
        debug_m: 091d 
      delimeter: 11bd 
       disdigit: 0440 
        dishex2: 0460 
        dishex4: 0452 
        dishexs: 0447 
      disscreen: 00b6 
         divend: 057c 
       division: 0574 
       divstart: 0575 
       e_wrval1: 01ac 
       e_wrval2: 01be 
       echo_off: 008c 
        echo_on: 0087 
      echo_save: 008e 
       echomode: 11b1 
      enbscreen: 00b4 
       end_boot: 3f55 
       end_loop: 3f5b 
         h2btab: 06e0 
         help_a: 0d4f 
         help_m: 0dd6 
           hex1: 03da 
        hex1val: 11b4 
           hex2: 03e8 
        hex2asc: 03d1 
        hex2val: 11b5 
      hexval4_m: 06b0 
        hw_irq1: 05a9 
        hw_irq2: 05ac 
      hw_irq2_1: 05ad 
        hw_irq3: 05af 
      hw_irq3_1: 05b9 
      hw_irq3_2: 05ba 
        hw_irq4: 05bb 
      hw_irq4_1: 0604 
      hw_irq4_2: 0602 
      hw_irq4_3: 0600 
      hw_irq4_4: 05fd 
      hw_irq4_5: 05fb 
      hw_irq4_6: 05e7 
        inpaddr: 11b9 
        inpchar: 11b8 
         irq1_v: 0002 
         irq2_v: 0004 
         irq3_v: 0006 
         irq4_v: 0008 
        irq_dis: 052b 
        irq_enb: 0528 
        irq_set: 051d 
        irqmask: 11ca 
         kpst00: 06fb 
         kpst10: 072b 
         kpst20: 0787 
         kpst30: 0793 
         kpst40: 07d7 
           main: 0073 
          main2: 007e 
       mainloop: 004d 
         memacc: 11c6 
      membyte_m: 0688 
        memdum4: 02ac 
       memdumb1: 028b 
       memdumb2: 028d 
        memdump: 0262 
       memdump0: 0264 
       memdumw1: 0271 
       memdumw2: 0273 
        memfill: 0314 
       memfill2: 032f 
       memfill3: 0336 
       memfill4: 033f 
         memlen: 0307 
        memnext: 025b 
         memode: 11c5 
        memof_m: 0658 
        memon_m: 0670 
          memop: 11cf 
         memptr: 11af 
     memptrlast: 11b0 
      memword_m: 069c 
           menu: 0847 
        month28: 058e 
        month29: 058a 
        month30: 059e 
        month31: 059a 
       monthchk: 057d 
      monthchk0: 0592 
      monthchk1: 05a2 
    monthchkend: 05a8 
          myapp: 0608 
         myapp2: 0619 
         myapp3: 0620 
       myappend: 0628 
      mycounter: 11b2 
          myled: 11b3 
      no_out_ch: 0415 
          noneg: 0422 
        outdata: 11ba 
         p_jump: 0366 
         p_rest: 036c 
         p_save: 0362 
          pjump: 11cd 
       prog_cnt: 3f8f 
       prog_lng: 3f8e 
         prompt: 06db 
       promptcr: 06de 
       promptlf: 06dc 
       promptx2: 06d9 
        rd_hex1: 0410 
        rd_hex2: 0436 
        rd_hex9: 0439 
        rd_hexa: 043f 
         rdchar: 0470 
         rdmemb: 0294 
         rdmemw: 027a 
         regptr: 11bf 
        reset_v: 0000 
     restorebuf: 0558 
    restorebuf1: 055f 
        rtcdump: 00a4 
         runapp: 0636 
        s_bitop: 0142 
       s_bitop1: 0147 
        savebuf: 053c 
       savebuf1: 0543 
       savebuf2: 0546 
          sesma: 0343 
        setdate: 0491 
        sethour: 049c 
         setmin: 04ac 
       setmonth: 0486 
        setpar1: 02c9 
        setpar2: 02da 
         setsec: 04ba 
          setup: 0010 
         setup1: 0051 
        setyear: 047b 
          ssm_1: 0347 
          ssm_2: 0354 
        ssm_end: 0370 
       ssm_exec: 0375 
        ssm_lst: 11cc 
        ssm_pst: 11cb 
          stack: 11e0 
        sw_irq1: 0607 
       sysset_m: 0b06 
          temp0: 11be 
       tempvar1: 1220 
       tempvar2: 1260 
        testinc: 062b 
       testinc2: 062f 
       tmr1date: 11d2 
       tmr1hour: 11d3 
        tmr1min: 11d4 
      tmr1month: 11d1 
       tmr1msec: 11c8 
        tmr1sec: 11d5 
      tmr1value: 11c9 
       tmr1year: 11d0 
         tohex2: 03ed 
        tohex21: 03fa 
        tohex22: 0408 
       treset_m: 06c6 
        tx_char: 037d 
        tx_ends: 039c 
        tx_fill: 0388 
        tx_line: 0376 
       tx_line2: 0378 
         tx_nxt: 0394 
        tx_page: 039d 
       tx_page2: 039f 
        tx_prmt: 03bd 
      tx_prmtcr: 03af 
      tx_prmtlf: 03b6 
      tx_prmtx2: 03c4 
       uartstat: 11bb 
         varchk: 11c0 
        vardum1: 02b9 
        vardum2: 02bb 
        vardump: 02af 
       vardump0: 02b1 
      version_m: 0638 
         wpst00: 0807 
         wpst01: 0813 
         wpst02: 082f 
         wpst03: 083b 
     zboot_addr: 3f00 
      zend_code: 11ae 
       zend_ram: 12a0 
*****************************************
Opcode listing.

0000   0039   reset_v: jmp setup ; 
0001   0010
0002   0039   irq1_v: jmp hw_irq1 ; 
0003   05a9
0004   0039   irq2_v: jmp hw_irq2 ; 
0005   05ac
0006   0039   irq3_v: jmp hw_irq3 ; 
0007   05af
0008   0039   irq4_v: jmp hw_irq4 ; 
0009   05bb
0010   0046   setup: cli ;
0011   0a2e   ldpv pA,UARTDAT ; 
0012   0010
0013   0b2e   ldpv pB,UARTSTA ;
0014   0011
0015   0f2e   ldpv pF,stack ; 
0016   11e0
0017   072e   ldpv p7,dbugptr ; 
0018   11d8
0019   0d2e   ldpv pD,tempvar1 ; 
001a   1220
001b   0e2e   ldpv pE,tempvar2 ; 
001c   1260
001d   0121   ldrv r1,kpst00 ; 
001e   06fb
001f   1028   str r1,ssm_pst ; 
0020   11cb
0021   1028   str r1,ssm_lst ; 
0022   11cc
0023   0121   ldrv r1,0 ; 
0024   0000
0025   1034   outp r1,GPREG_01 ; 
0026   0001
0027   1034   outp r1,GPREG_04 ; 
0028   0004
0029   1034   outp r1,GPREG_05 ; 
002a   0005
002b   1034   outp r1,GPREG_06 ; 
002c   0006
002d   0121   ldrv r1,tempvar1 ; 
002e   1220
002f   1034   outp r1,GPREG_00 ; 
0030   0000
0031   0121   ldrv r1,zend_code ; 
0032   11ae
0033   1034   outp r1,GPREG_02 ; 
0034   0002
0035   0121   ldrv r1,zend_ram ; 
0036   12a0
0037   1034   outp r1,GPREG_03 ; 
0038   0003
0039   0121   ldrv r1,'h0002 ; 
003a   0002
003b   1034   outp r1,GPREG_07 ; 
003c   0007
003d   0121   ldrv r1,'h7840 ; 
003e   7840
003f   1034   outp r1,GPREG_08 ; 
0040   0008
0041   0121   ldrv r1,'h017d ; 
0042   017d
0043   1034   outp r1,GPREG_09 ; 
0044   0009
0045   0027   ldpagv 7 ;
0046   0007
0047   012e   ldpv p1,0 ;
0048   0000
0049   011f   ldcv c1,127 ;
004a   007f
004b   110e   xor r1,r1 ;
004c   3026   ldmam m3 ; 
004d   112b   mainloop: strpi r1,p1 ;
004e   0138   dcjnz c1,mainloop ;
004f   004d
0050   0026   ldmam m0 ; 
0051   0121   setup1: ldrv r1,YEAR ;
0052   07e6
0053   1028   str r1,tmr1year ;
0054   11d0
0055   0121   ldrv r1,MONTH ;
0056   0001
0057   1028   str r1,tmr1month ;
0058   11d1
0059   0121   ldrv r1,DATE ;
005a   0001
005b   1028   str r1,tmr1date ;
005c   11d2
005d   110e   xor r1,r1 ;
005e   1028   str r1,tmr1hour ;
005f   11d3
0060   1028   str r1,tmr1min ;
0061   11d4
0062   1028   str r1,tmr1sec ;
0063   11d5
0064   823e   uflag t2 ; 
0065   033e   uflag f3 ; 
0066   053e   uflag f5 ; 
0067   063e   uflag f6 ; 
0068   873e   uflag t7 ; 
0069   0e3e   uflag fE ; 
006a   0a3e   uflag fA ; 
006b   003f   uport f0 ; 
006c   043f   uport f4 ; 
006d   083f   uport f8 ; 
006e   093f   uport f9 ; 
006f   003b   jsr d_target ; 
0070   04f1
0071   003b   jsr irq_enb ; 
0072   0528
0073   803f   main: uport t0 ; 
0074   b133   inpp r1,pB ; 
0075   003f   uport f0 ; 
0076   0141   bitv r1,RXDVLD ; 
0077   0080
0078   1037   bra z,main2 ; 
0079   0005
007a   003b   jsr rdchar ; 
007b   0470
007c   003b   jsr sesma ; 
007d   0343
007e   0339   main2: jmp f3,main ; 
007f   0073
0080   033e   uflag f3 ; 
0081   0121   ldrv r1,main ; 
0082   0073
0083   1f2b   push r1,pF ; 
0084   032d   ldp p3,pjump ; 
0085   11cd
0086   033a   jmpp p3 ; 
0087   873e   echo_on: uflag t7 ;
0088   0121   ldrv r1,1 ;
0089   0001
008a   0037   bra echo_save ;
008b   0003
008c   073e   echo_off: uflag f7 ;
008d   110e   xor r1,r1 ;
008e   1028   echo_save: str r1,echomode ;
008f   11b1
0090   003c   rts ; 
0091   873e   d_prgver: uflag t7 ;
0092   0c2e   ldpv pC,version_m ;
0093   0638
0094   003b   jsr tx_line ;
0095   0376
0096   003b   jsr tx_prmtlf ;
0097   03b6
0098   0120   ldr r1,echomode ;
0099   11b1
009a   110c   or r1,r1 ;
009b   9037   bra nz,d_prgver2 ;
009c   0002
009d   073e   uflag f7 ;
009e   003c   d_prgver2: rts ;
009f   873e   d_rtcval: uflag t7 ;
00a0   012e   ldpv p1,tmr1year ;
00a1   11d0
00a2   011f   ldcv c1,5 ; 
00a3   0005
00a4   1224   rtcdump: ldrpi r2,p1 ;
00a5   003b   jsr dishex4 ; 
00a6   0452
00a7   0138   dcjnz c1,rtcdump ;
00a8   00a4
00a9   0c2e   ldpv pC,promptlf ; 
00aa   06dc
00ab   003b   jsr tx_line ; 
00ac   0376
00ad   0120   ldr r1,echomode ;
00ae   11b1
00af   110c   or r1,r1 ;
00b0   9037   bra nz,d_rtcval2 ;
00b1   0002
00b2   073e   uflag f7 ;
00b3   003c   d_rtcval2: rts ;
00b4   823e   enbscreen: uflag t2 ;
00b5   003c   rts ; 
00b6   023e   disscreen: uflag f2 ;
00b7   003c   rts ; 
00b8   0239   clscreen: jmp f2,clscreen2 ;
00b9   00c6
00ba   0c2e   ldpv pC,cls_m ; 
00bb   06f0
00bc   003b   jsr tx_line ; 
00bd   0376
00be   003b   jsr tx_prmtx2 ;
00bf   03c4
00c0   0c2e   ldpv pC,chome_m ; 
00c1   06f6
00c2   003b   jsr tx_line ; 
00c3   0376
00c4   003b   jsr tx_prmtx2 ;
00c5   03c4
00c6   003c   ;     
00c7   003b   d_menu: jsr clscreen ; 
00c8   00b8
00c9   110e   xor r1,r1 ;
00ca   1028   str r1,mycounter ;
00cb   11b2
00cc   1028   str r1,myled ;
00cd   11b3
00ce   0c2e   ldpv pC,menu ; 
00cf   0847
00d0   0039   jmp d_txpage ;
00d1   013d
00d2   003b   d_appset: jsr clscreen ; 
00d3   00b8
00d4   0c2e   ldpv pC,appset_m ; 
00d5   0c4c
00d6   0039   jmp d_txpage ;
00d7   013d
00d8   003b   d_sysset: jsr clscreen ; 
00d9   00b8
00da   0c2e   ldpv pC,sysset_m ; 
00db   0b06
00dc   0039   jmp d_txpage ;
00dd   013d
00de   873e   d_debug: uflag t7 ; 
00df   003b   jsr clscreen ; 
00e0   00b8
00e1   0c2e   ldpv pC,debug_m ; 
00e2   091d
00e3   0039   jmp d_txpage ;
00e4   013d
00e5   003b   d_help: jsr clscreen ; 
00e6   00b8
00e7   0c2e   ldpv pC,help_m ; 
00e8   0dd6
00e9   0039   jmp d_txpage ;
00ea   013d
00eb   003b   d_helpa: jsr clscreen ; 
00ec   00b8
00ed   0c2e   ldpv pC,help_a ; 
00ee   0d4f
00ef   0039   jmp d_txpage ;
00f0   013d
00f1   003b   d_aregs: jsr clscreen ; 
00f2   00b8
00f3   003b   jsr tx_prmt ; 
00f4   03bd
00f5   0120   ldr r1,regptr ;
00f6   11bf
00f7   181a   mvrp r1,p8 ;
00f8   011f   ldcv c1,15 ;
00f9   000f
00fa   8233   d_areg1: inpp r2,p8 ;
00fb   003b   jsr dishex4 ;
00fc   0452
00fd   003b   jsr tx_prmt ;
00fe   03bd
00ff   0830   incp p8 ;
0100   0138   dcjnz c1,d_areg1 ;
0101   00fa
0102   003b   jsr tx_prmt ;
0103   03bd
0104   003c   rts ; 
0105   0120   d_mema: ldr r1,memacc ;
0106   11c6
0107   010f   xorv r1,1 ;
0108   0001
0109   9037   bra nz,d_memon ;
010a   0008
010b   220e   xor r2,r2 ;
010c   2028   str r2,memop ;
010d   11cf
010e   0c2e   ldpv pC,memof_m ; 
010f   0658
0110   0037   bra d_memof ;
0111   0007
0112   0221   d_memon: ldrv r2,3 ;
0113   0003
0114   2028   str r2,memop ;
0115   11cf
0116   0c2e   ldpv pC,memon_m ;
0117   0670
0118   1028   d_memof: str r1,memacc ;
0119   11c6
011a   003b   jsr tx_line ;
011b   0376
011c   003b   jsr tx_prmt ;
011d   03bd
011e   003c   rts ; 
011f   0120   d_memb: ldr r1,memode ;
0120   11c5
0121   010f   xorv r1,1 ;
0122   0001
0123   9037   bra nz,d_membyte ;
0124   0005
0125   0c2e   ldpv pC,memword_m ; 
0126   069c
0127   0037   bra d_memword ;
0128   0003
0129   0c2e   d_membyte: ldpv pC,membyte_m ;
012a   0688
012b   1028   d_memword: str r1,memode ;
012c   11c5
012d   003b   jsr tx_line ;
012e   0376
012f   003b   jsr tx_prmt ;
0130   03bd
0131   003c   ;     
0132   0c2e   d_base: ldpv pC,hexval4_m ; 
0133   06b0
0134   003b   jsr tx_line ;
0135   0376
0136   003b   jsr asc2hex ;
0137   040d
0138   2028   str r2,regptr ;
0139   11bf
013a   003b   jsr tx_prmtx2 ;
013b   03c4
013c   003c   rts ; 
013d   003b   d_txpage: jsr tx_page ;
013e   039d
013f   003b   jsr tx_prmtcr ;
0140   03af
0141   003c   d_nothing: rts ;
0142   0120   s_bitop: ldr r1,inpchar ; 
0143   11b8
0144   0739   jmp f7,s_bitop1 ;
0145   0147
0146   1a35   outpp r1,pA ; 
0147   1028   s_bitop1: str r1,bitop ;
0148   11bc
0149   0121   clrval: ldrv r1,'h3030 ; 
014a   3030
014b   1028   str r1,cvalue1 ;
014c   11b6
014d   1028   str r1,cvalue2 ;
014e   11b7
014f   003c   rts ; 
0150   0120   a_getadr: ldr r1,inpchar ;
0151   11b8
0152   0739   jmp f7,a_geta1 ;
0153   0155
0154   1a35   outpp r1,pA ; 
0155   0220   a_geta1: ldr r2,cvalue1 ;
0156   11b6
0157   0320   ldr r3,cvalue2 ;
0158   11b7
0159   011f   ldcv c1,7 ;
015a   0007
015b   0215   a_geta2: shl l,r2 ;
015c   1315   shl k,r3 ;
015d   0138   dcjnz c1,a_geta2 ;
015e   015b
015f   3028   str r3,cvalue2 ;
0160   11b7
0161   120c   or r2,r1 ;
0162   2028   str r2,cvalue1 ;
0163   11b6
0164   003c   rts ; 
0165   003b   a_getval: jsr a_setadd ;
0166   0189
0167   003b   jsr tx_prmt ;
0168   03bd
0169   012d   ldp p1,inpaddr ;
016a   11b9
016b   0120   ldr r1,bitop ;
016c   11bc
016d   1113   cmprv r1,"m" ;
016e   006d
016f   1037   bra z,a_getmem ;
0170   0004
0171   1233   inpp r2,p1 ;
0172   0037   bra a_getend ;
0173   0010
0174   102f   a_getmem: stp p1,memptr ;
0175   11af
0176   102f   stp p1,memptrlast ;
0177   11b0
0178   0420   ldr r4,memop ;
0179   11cf
017a   040b   andv r4,3 ;
017b   0003
017c   9037   bra nz,a_getex ;
017d   0004
017e   1222   ldrp r2,p1 ;
017f   0037   bra a_getend ;
0180   0003
0181   1026   a_getex: ldmam m1 ; 
0182   1222   ldrp r2,p1 ;
0183   0026   a_getend: ldmam m0 ; 
0184   003b   jsr dishex4 ;
0185   0452
0186   003b   jsr tx_prmt ;
0187   03bd
0188   003c   rts ; 
0189   0120   a_setadd: ldr r1,cvalue1 ;
018a   11b6
018b   003b   jsr tohex2 ;
018c   03ed
018d   2319   mvrr r2,r3 ;
018e   0120   ldr r1,cvalue2 ;
018f   11b7
0190   003b   jsr tohex2 ;
0191   03ed
0192   0217   shl4 r2 ;
0193   0217   shl4 r2 ;
0194   320c   or r2,r3 ;
0195   2028   str r2,inpaddr ;
0196   11b9
0197   0121   ldrv r1,'h3030 ;
0198   3030
0199   1028   str r1,cvalue1 ;
019a   11b6
019b   1028   str r1,cvalue2 ;
019c   11b7
019d   0120   ldr r1,inpchar ; 
019e   11b8
019f   1028   str r1,delimeter ;
01a0   11bd
01a1   0739   jmp f7,a_setadd2;
01a2   01a4
01a3   1a35   outpp r1,pA ;
01a4   003c   a_setadd2: rts ;
01a5   003b   a_regdat: jsr a_getadr ;
01a6   0150
01a7   003c   rts ; 
01a8   003b   a_wrval1: jsr a_wrval ;
01a9   01bf
01aa   003b   jsr a_wrout ;
01ab   01ce
01ac   003c   e_wrval1: rts ;
01ad   003b   a_wrval2: jsr a_wrval ;
01ae   01bf
01af   0220   ldr r2,outdata ;
01b0   11ba
01b1   2209   not r2 ;
01b2   0320   ldr r3,delimeter ;
01b3   11bd
01b4   3313   cmprv r3,"-" ;
01b5   002d
01b6   9037   bra ne,a_ones ;
01b7   0003
01b8   0203   addv r2,1 ;
01b9   0001
01ba   2028   a_ones: str r2,outdata ;
01bb   11ba
01bc   003b   jsr a_wrout ;
01bd   01ce
01be   003c   e_wrval2: rts ;
01bf   0120   a_wrval: ldr r1,cvalue1 ;
01c0   11b6
01c1   003b   jsr tohex2 ;
01c2   03ed
01c3   2319   mvrr r2,r3 ; 
01c4   0120   ldr r1,cvalue2 ;
01c5   11b7
01c6   003b   jsr tohex2 ;
01c7   03ed
01c8   0217   shl4 r2 ;
01c9   0217   shl4 r2 ;
01ca   320c   or r2,r3 ; 
01cb   2028   str r2,outdata ;
01cc   11ba
01cd   003c   rts ; 
01ce   0120   a_wrout: ldr r1,outdata ;
01cf   11ba
01d0   0220   ldr r2,inpaddr ;
01d1   11b9
01d2   0320   ldr r3,bitop ;
01d3   11bc
01d4   0420   ldr r4,memop ;
01d5   11cf
01d6   3313   cmprv r3,"w" ; 
01d7   0077
01d8   9037   bra ne,a_w1 ;
01d9   0005
01da   211a   mvrp r2,p1 ;
01db   1135   outpp r1,p1 ;
01dc   0037   bra a_wend ;
01dd   0074
01de   3313   a_w1: cmprv r3,"s" ; 
01df   0073
01e0   9037   bra ne,a_w2 ;
01e1   000e
01e2   211a   mvrp r2,p1 ;
01e3   032e   ldpv p3,h2btab ;
01e4   06e0
01e5   0120   ldr r1,outdata ;
01e6   11ba
01e7   3104   addrp r1,p3 ;
01e8   131a   mvrp r1,p3 ;
01e9   3122   ldrp r1,p3 ; 
01ea   1233   inpp r2,p1 ; 
01eb   120c   or r2,r1 ;
01ec   2135   outpp r2,p1 ;
01ed   0037   bra a_wend ;
01ee   0063
01ef   3313   a_w2: cmprv r3,"c" ; 
01f0   0063
01f1   9037   bra ne,a_w3 ;
01f2   000f
01f3   211a   mvrp r2,p1 ;
01f4   032e   ldpv p3,h2btab ;
01f5   06e0
01f6   0120   ldr r1,outdata ;
01f7   11ba
01f8   3104   addrp r1,p3 ;
01f9   131a   mvrp r1,p3 ;
01fa   3122   ldrp r1,p3 ; 
01fb   1109   not r1,r1 ; 
01fc   1233   inpp r2,p1 ; 
01fd   120a   and r2,r1 ;
01fe   2135   outpp r2,p1 ;
01ff   0037   bra a_wend ;
0200   0051
0201   3313   a_w3: cmprv r3,"t" ; 
0202   0074
0203   9037   bra ne,a_w4 ;
0204   000e
0205   211a   mvrp r2,p1 ;
0206   032e   ldpv p3,h2btab ;
0207   06e0
0208   0120   ldr r1,outdata ;
0209   11ba
020a   3104   addrp r1,p3 ;
020b   131a   mvrp r1,p3 ;
020c   3122   ldrp r1,p3 ; 
020d   1233   inpp r2,p1 ; 
020e   120e   xor r2,r1 ;
020f   2135   outpp r2,p1 ;
0210   0037   bra a_wend ;
0211   0040
0212   3313   a_w4: cmprv r3,"i" ; 
0213   0069
0214   9037   bra ne,a_w5 ;
0215   0010
0216   211a   mvrp r2,p1 ;
0217   032e   ldpv p3,h2btab ;
0218   06e0
0219   0120   ldr r1,outdata ;
021a   11ba
021b   3104   addrp r1,p3 ;
021c   131a   mvrp r1,p3 ;
021d   3122   ldrp r1,p3 ; 
021e   1233   inpp r2,p1 ; 
021f   120e   xor r2,r1 ;
0220   2135   outpp r2,p1 ; 
0221   120e   xor r2,r1 ;
0222   2135   outpp r2,p1 ;
0223   0037   bra a_wend ;
0224   002d
0225   3313   a_w5: cmprv r3,"a" ; 
0226   0061
0227   9037   bra ne,a_w6 ;
0228   0007
0229   211a   mvrp r2,p1 ;
022a   1333   inpp r3,p1 ; 
022b   310a   and r1,r3 ;
022c   1135   outpp r1,p1 ;
022d   0037   bra a_wend ;
022e   0023
022f   3313   a_w6: cmprv r3,"o" ; 
0230   006f
0231   9037   bra ne,a_w7 ;
0232   0007
0233   211a   mvrp r2,p1 ;
0234   1333   inpp r3,p1 ; 
0235   310c   or r1,r3 ;
0236   1135   outpp r1,p1 ;
0237   0037   bra a_wend ;
0238   0019
0239   3313   a_w7: cmprv r3,"e" ; 
023a   0065
023b   9037   bra ne,a_w8 ;
023c   0007
023d   211a   mvrp r2,p1 ;
023e   1333   inpp r3,p1 ; 
023f   310e   xor r1,r3 ;
0240   1135   outpp r1,p1 ;
0241   0037   bra a_wend ;
0242   000f
0243   3313   a_w8: cmprv r3,"m" ; 
0244   006d
0245   9037   bra ne,a_wend ;
0246   000b
0247   012d   ldp p1,inpaddr ;
0248   11b9
0249   0320   ldr r3,memop ;
024a   11cf
024b   030b   andv r3,3 ;
024c   0003
024d   1037   bra z,a_w9 ;
024e   0002
024f   2026   ldmam m2 ; 
0250   1129   a_w9: strp r1,p1 ;
0251   0026   a_wend: ldmam m0 ; 
0252   003b   jsr tx_prmt ;
0253   03bd
0254   003b   jsr tx_prmt ;
0255   03bd
0256   003c   rts ; 
0257   0000   a_quit: nop ;
0258   003b   jsr tx_prmt ;
0259   03bd
025a   003c   rts ; 
025b   853e   memnext: uflag t5 ; 
025c   012d   ldp p1,memptr ;
025d   11af
025e   102f   stp p1,memptrlast ;
025f   11b0
0260   0039   jmp memdump0 ;
0261   0264
0262   012d   memdump: ldp p1,memptrlast ;
0263   11b0
0264   121b   memdump0: mvpr p1,r2 ; 
0265   003b   jsr dishex4 ; 
0266   0452
0267   003b   jsr tx_prmt ; 
0268   03bd
0269   0026   ldmam m0 ; 
026a   021f   ldcv c2,15 ; 
026b   000f
026c   0120   ldr r1,memode ;
026d   11c5
026e   110c   or r1,r1 ;
026f   9037   bra nz,memdumb1 ;
0270   001b
0271   011f   memdumw1: ldcv c1,7 ; 
0272   0007
0273   0120   memdumw2: ldr r1,memop ;
0274   11cf
0275   010b   andv r1,3 ;
0276   0003
0277   1037   bra z,rdmemw ;
0278   0002
0279   1026   ldmam m1 ; 
027a   1224   rdmemw: ldrpi r2,p1 ;
027b   0026   ldmam m0 ; 
027c   003b   jsr dishex4 ; 
027d   0452
027e   0138   dcjnz c1,memdumw2 ;
027f   0273
0280   003b   jsr tx_prmt ;
0281   03bd
0282   0238   dcjnz c2,memdumw1 ;
0283   0271
0284   0539   jmp f5,memdum4 ;
0285   02ac
0286   102f   stp p1,memptr ;
0287   11af
0288   053e   uflag f5 ;
0289   0039   jmp memdum4 ;
028a   02ac
028b   011f   memdumb1: ldcv c1,7 ; 
028c   0007
028d   0120   memdumb2: ldr r1,memop ;
028e   11cf
028f   010b   andv r1,3 ;
0290   0003
0291   1037   bra z,rdmemb ;
0292   0002
0293   1026   ldmam m1 ; 
0294   330e   rdmemb: xor r3,r3 ;
0295   1224   ldrpi r2,p1 ; 
0296   230c   or r3,r2 ;
0297   1224   ldrpi r2,p1 ;
0298   0217   shl4 r2 ;
0299   0217   shl4 r2 ;
029a   230c   or r3,r2 ;
029b   321d   swap r3,r2 ;
029c   0026   ldmam m0 ; 
029d   003b   jsr dishex4 ; 
029e   0452
029f   0138   dcjnz c1,memdumb2 ;
02a0   028d
02a1   003b   jsr tx_prmt ;
02a2   03bd
02a3   0238   dcjnz c2,memdumb1 ;
02a4   028b
02a5   0539   jmp f5,memdum4 ;
02a6   02ac
02a7   102f   stp p1,memptr ;
02a8   11af
02a9   053e   uflag f5 ;
02aa   0039   jmp memdum4 ;
02ab   02ac
02ac   003b   memdum4: jsr tx_prmt ;
02ad   03bd
02ae   003c   rts ; 
02af   012e   vardump: ldpv p1,varchk ;
02b0   11c0
02b1   121b   vardump0: mvpr p1,r2 ; 
02b2   003b   jsr dishex4 ; 
02b3   0452
02b4   003b   jsr tx_prmt ; 
02b5   03bd
02b6   0026   ldmam m0 ; 
02b7   021f   ldcv c2,7 ; 
02b8   0007
02b9   011f   vardum1: ldcv c1,7 ; 
02ba   0007
02bb   1224   vardum2: ldrpi r2,p1 ;
02bc   003b   jsr dishex4 ; 
02bd   0452
02be   0138   dcjnz c1,vardum2 ;
02bf   02bb
02c0   003b   jsr tx_prmt ;
02c1   03bd
02c2   0238   dcjnz c2,vardum1 ;
02c3   02b9
02c4   102f   stp p1,memptr ;
02c5   11af
02c6   003b   jsr tx_prmt ;
02c7   03bd
02c8   003c   rts ; 
02c9   0c2e   setpar1: ldpv pC,hexval4_m ; 
02ca   06b0
02cb   003b   jsr tx_line ;
02cc   0376
02cd   003b   jsr asc2hex ; 
02ce   040d
02cf   3028   str r3,buff_len ; 
02d0   11c1
02d1   372a   strx r3,p7,IR_IX_LN ; 
02d2   0001
02d3   2028   str r2,buff_addr ; 
02d4   11c0
02d5   372a   strx r3,p7,IR_IX ; 
02d6   0002
02d7   003b   jsr tx_prmt ;
02d8   03bd
02d9   003c   rts ; 
02da   0c2e   setpar2: ldpv pC,hexval4_m ; 
02db   06b0
02dc   003b   jsr tx_line ;
02dd   0376
02de   003b   jsr asc2hex ; 
02df   040d
02e0   030b   andv r3,'h0007 ; 
02e1   0007
02e2   372a   strx r3,p7,SR_IX ; 
02e3   0000
02e4   3042   ldpag r3 ; 
02e5   2028   str r2,buff_addrx ; 
02e6   11c2
02e7   372a   strx r3,p7,ER_IX ; 
02e8   0003
02e9   003b   jsr tx_prmt ;
02ea   03bd
02eb   003c   rts ; 
02ec   012d   bufdump: ldp p1,buff_addr ;
02ed   11c0
02ee   121b   bufdump0: mvpr p1,r2 ; 
02ef   003b   jsr dishex4 ; 
02f0   0452
02f1   003b   jsr tx_prmt ; 
02f2   03bd
02f3   0026   ldmam m0 ; 
02f4   0520   ldr r5,buff_len ;
02f5   11c1
02f6   5243   ldc c2,r5 ;
02f7   011f   bufdum1: ldcv c1,7 ; 
02f8   0007
02f9   1224   bufdum2: ldrpi r2,p1 ;
02fa   003b   jsr dishex4 ; 
02fb   0452
02fc   0138   dcjnz c1,bufdum2 ;
02fd   02f9
02fe   003b   jsr tx_prmt ;
02ff   03bd
0300   0238   dcjnz c2,bufdum1 ;
0301   02f7
0302   102f   stp p1,memptr ;
0303   11af
0304   003b   jsr tx_prmt ;
0305   03bd
0306   003c   rts ; 
0307   0c2e   memlen: ldpv pC,hexval4_m ; 
0308   06b0
0309   003b   jsr tx_line ;
030a   0376
030b   003b   jsr asc2hex ; 
030c   040d
030d   3028   str r3,buff_len ; 
030e   11c1
030f   2028   str r2,buff_inc ; 
0310   11c4
0311   003b   jsr tx_prmt ;
0312   03bd
0313   003c   rts ; 
0314   0c2e   memfill: ldpv pC,hexval4_m ; 
0315   06b0
0316   003b   jsr tx_line ;
0317   0376
0318   003b   jsr asc2hex ; 
0319   040d
031a   3028   str r3,buff_addr ; 
031b   11c0
031c   2028   str r2,buff_value ;
031d   11c3
031e   311a   mvrp r3,p1 ; 
031f   0520   ldr r5,buff_inc ; 
0320   11c4
0321   0420   ldr r4,buff_len ; 
0322   11c1
0323   0620   ldr r6,memop ;
0324   11cf
0325   060b   andv r6,3 ;
0326   0003
0327   1037   bra z,memfill2 ;
0328   0007
0329   0120   ldr r1,memode ; 
032a   11c5
032b   2026   ldmam m2 ; 
032c   110c   or r1,r1 ; 
032d   9037   bra nz,memfill3 ;
032e   0008
032f   212b   memfill2: strpi r2,p1 ; 
0330   5201   add r2,r5 ;
0331   0411   dec r4 ;
0332   9037   bra nz,memfill2 ;
0333   fffc
0334   0037   bra memfill4 ;
0335   000a
0336   212b   memfill3: strpi r2,p1 ; 
0337   2319   mvrr r2,r3 ;
0338   0318   shr4 r3 ; 
0339   0318   shr4 r3 ;
033a   312b   strpi r3,p1 ;
033b   5201   add r2,r5 ;
033c   0411   dec r4 ;
033d   9037   bra nz,memfill3 ;
033e   fff8
033f   0026   memfill4: ldmam m0 ; 
0340   003b   jsr tx_prmt ;
0341   03bd
0342   003c   rts ; 
0343   2f2b   sesma: strpi r2,pF ;
0344   3f2b   strpi r3,pF ;
0345   012d   ldp p1,ssm_pst ;
0346   11cb
0347   1222   ssm_1: ldrp r2,p1 ;
0348   220c   or r2,r2 ;
0349   1037   bra e,ssm_2 ;
034a   000a
034b   2112   cmpr r1,r2 ;
034c   1037   bra e,ssm_2 ;
034d   0007
034e   131b   mvpr p1,r3 ; 
034f   0303   addv r3,4 ;
0350   0004
0351   311a   mvrp r3,p1 ;
0352   0037   bra ssm_1 ;
0353   fff4
0354   1223   ssm_2: ldrx r2,p1,1 ; 
0355   0001
0356   2213   cmprv r2,"R" ; 
0357   0052
0358   1037   bra e,p_rest ;
0359   0013
035a   2213   cmprv r2,"J" ; 
035b   004a
035c   1037   bra e,p_jump ;
035d   0009
035e   2213   cmprv r2,"S" ; 
035f   0053
0360   9037   bra ne,ssm_end ;
0361   000f
0362   0220   p_save: ldr r2,ssm_pst ; 
0363   11cb
0364   2028   str r2,ssm_lst ; 
0365   11cc
0366   1223   p_jump: ldrx r2,p1,3 ; 
0367   0003
0368   2028   str r2,ssm_pst ; 
0369   11cb
036a   0037   bra ssm_end ;
036b   0005
036c   0220   p_rest: ldr r2,ssm_lst ;
036d   11cc
036e   2028   str r2,ssm_pst ;
036f   11cb
0370   1223   ssm_end: ldrx r2,p1,2 ;
0371   0002
0372   211a   mvrp r2,p1 ;
0373   f325   ldrpd r3,pF ;
0374   f225   ldrpd r2,pF ;
0375   013a   ssm_exec: jmpp p1 ; 
0376   0739   tx_line: jmp f7,tx_ends ;
0377   039c
0378   b333   tx_line2: inpp r3,pB ; 
0379   030b   andv r3,TXEMPT ; 
037a   0020
037b   1037   bra z,tx_line2 ; 
037c   fffc
037d   c424   tx_char: ldrpi r4,pC ; 
037e   4413   cmprv r4,NULL ; 
037f   0000
0380   1037   bra z,tx_ends ; 
0381   001b
0382   4413   cmprv r4,"|" ;
0383   007c
0384   9037   bra nz,tx_nxt ;
0385   000f
0386   001f   ldcv c0,NUMFILL ; 
0387   0005
0388   b333   tx_fill: inpp r3,pB ; 
0389   030b   andv r3,TXFULL ; 
038a   0040
038b   9037   bra nz,tx_fill ; 
038c   fffc
038d   0421   ldrv r4,CHARFILL ; 
038e   002d
038f   4a35   outpp r4,pA ;
0390   0038   dcjnz c0,tx_fill ;
0391   0388
0392   0037   bra tx_line2 ; 
0393   ffe5
0394   4a35   tx_nxt: outpp r4,pA ; 
0395   b333   inpp r3,pB ; 
0396   030b   andv r3,TXFULL ; 
0397   0040
0398   9037   bra nz,tx_line2 ; 
0399   ffdf
039a   0037   bra tx_char ; 
039b   ffe2
039c   003c   tx_ends: rts ; 
039d   0739   tx_page: jmp f7,tx_ends ;
039e   039c
039f   003b   tx_page2: jsr tx_line ; 
03a0   0376
03a1   c11b   mvpr pC,r1 ;
03a2   1028   str r1,temp0 ;
03a3   11be
03a4   003b   jsr tx_prmt ; 
03a5   03bd
03a6   0120   ldr r1,temp0 ;
03a7   11be
03a8   1c1a   mvrp r1,pC ;
03a9   c322   ldrp r3,pC ; 
03aa   3313   cmprv r3,ETX ; 
03ab   0003
03ac   9037   bra nz,tx_page2 ; 
03ad   fff2
03ae   003c   rts ; 
03af   0739   tx_prmtcr: jmp f7,tx_ends ;
03b0   039c
03b1   0c2e   ldpv pC,promptcr ; 
03b2   06de
03b3   003b   jsr tx_line ; 
03b4   0376
03b5   003c   rts ; 
03b6   0739   tx_prmtlf: jmp f7,tx_ends ;
03b7   039c
03b8   0c2e   ldpv pC,promptlf ; 
03b9   06dc
03ba   003b   jsr tx_line ; 
03bb   0376
03bc   003c   rts ; 
03bd   0739   tx_prmt: jmp f7,tx_ends ;
03be   039c
03bf   0c2e   ldpv pC,prompt ; 
03c0   06db
03c1   003b   jsr tx_line ; 
03c2   0376
03c3   003c   rts ; 
03c4   0739   tx_prmtx2: jmp f7,tx_ends ;
03c5   039c
03c6   0c2e   ldpv pC,promptx2 ; 
03c7   06d9
03c8   003b   jsr tx_line ; 
03c9   0376
03ca   003c   rts ; 
03cb   b133   chkstat: inpp r1,pB ; 
03cc   010b   andv r1,TXFULL ; 
03cd   0040
03ce   9037   bra nz,chkstat ; 
03cf   fffc
03d0   003c   rts ; 
03d1   2f2b   hex2asc: strpi r2,pF ; 
03d2   020b   andv r2,'h00F ;
03d3   000f
03d4   2213   cmprv r2,'h00A ;
03d5   000a
03d6   d037   bra lt,hex1 ;
03d7   0003
03d8   0203   addv r2,'h007 ;
03d9   0007
03da   0203   hex1: addv r2,'h030 ;
03db   0030
03dc   2028   str r2,hex1val ;
03dd   11b4
03de   f225   ldrpd r2,pF ; 
03df   0218   shr4 r2 ; 
03e0   020b   andv r2,'h00F ;
03e1   000f
03e2   2213   cmprv r2,'h00A ;
03e3   000a
03e4   d037   bra lt,hex2 ;
03e5   0003
03e6   0203   addv r2,'h007 ;
03e7   0007
03e8   0203   hex2: addv r2,'h030 ;
03e9   0030
03ea   2028   str r2,hex2val ;
03eb   11b5
03ec   003c   rts ; 
03ed   1219   tohex2: mvrr r1,r2 ; 
03ee   010b   andv r1,'h00ff ;
03ef   00ff
03f0   0107   subv r1,'h030 ; 
03f1   0030
03f2   1113   cmprv r1,9 ;
03f3   0009
03f4   f037   bra ls,tohex21 ;
03f5   0005
03f6   010b   andv r1,'h000f ;
03f7   000f
03f8   0103   addv r1,9 ;
03f9   0009
03fa   0218   tohex21: shr4 r2 ;
03fb   0218   shr4 r2 ;
03fc   020b   andv r2,'h00ff ;
03fd   00ff
03fe   0207   subv r2,'h030 ; 
03ff   0030
0400   2213   cmprv r2,9 ;
0401   0009
0402   f037   bra ls,tohex22 ;
0403   0005
0404   020b   andv r2,'h000f ;
0405   000f
0406   0203   addv r2,9 ;
0407   0009
0408   0217   tohex22: shl4 r2 ;
0409   020b   andv r2,'h00f0 ;
040a   00f0
040b   120c   or r2,r1 ;
040c   003c   rts ; 
040d   220e   asc2hex: xor r2,r2 ; 
040e   330e   xor r3,r3 ; 
040f   063e   uflag f6 ;
0410   003b   rd_hex1: jsr rdchar ;
0411   0470
0412   0739   jmp f7,no_out_ch ;
0413   0415
0414   1a35   outpp r1,pA ; 
0415   1113   no_out_ch: cmprv r1,CR ;
0416   000d
0417   1037   bra z,rd_hex9 ;
0418   0021
0419   1113   cmprv r1,LF ;
041a   000a
041b   1037   bra z,rd_hex9 ;
041c   001d
041d   1113   cmprv r1,"-" ;
041e   002d
041f   9037   bra ne,noneg ;
0420   0002
0421   863e   uflag t6 ;
0422   0107   noneg: subv r1,'h030 ; 
0423   0030
0424   3037   bra s,rd_hex1 ; 
0425   ffeb
0426   0215   shl l,r2 ;
0427   1315   shl k,r3 ;
0428   0215   shl l,r2 ;
0429   1315   shl k,r3 ;
042a   0215   shl l,r2 ;
042b   1315   shl k,r3 ;
042c   0215   shl l,r2 ;
042d   1315   shl k,r3 ;
042e   1113   cmprv r1,9 ;
042f   0009
0430   f037   bra ls,rd_hex2 ;
0431   0005
0432   010b   andv r1,'h00F ; 
0433   000f
0434   0103   addv r1,9 ;
0435   0009
0436   120c   rd_hex2: or r2,r1 ;
0437   0037   bra rd_hex1 ;
0438   ffd8
0439   0639   rd_hex9: jmp f6,rd_hexa ;
043a   043f
043b   2209   not r2,r2 ;
043c   3309   not r3,r3 ;
043d   0203   addv r2,1 ;
043e   0001
043f   003c   rd_hexa: rts ;
0440   0203   disdigit: addv r2,'h30 ; 
0441   0030
0442   2a35   outpp r2,pA ; 
0443   0221   ldrv r2,CR ;
0444   000d
0445   2a35   outpp r2,pA ; 
0446   003c   rts ; 
0447   2319   dishexs: mvrr r2,r3 ;
0448   030b   andv r3,SIGNED ;
0449   8000
044a   1037   bra z,dishex4 ;
044b   0007
044c   2209   not r2 ;
044d   0203   addv r2,1 ;
044e   0001
044f   0321   ldrv r3,"-" ;
0450   002d
0451   3a35   outpp r3,pA ; 
0452   2319   dishex4: mvrr r2,r3 ;
0453   0218   shr4 r2 ;
0454   0218   shr4 r2 ;
0455   003b   jsr hex2asc ;
0456   03d1
0457   0120   ldr r1,hex2val ;
0458   11b5
0459   1a35   outpp r1,pA ;
045a   003b   jsr chkstat ;
045b   03cb
045c   0120   ldr r1,hex1val ;
045d   11b4
045e   1a35   outpp r1,pA ;
045f   3219   mvrr r3,r2 ;
0460   003b   dishex2: jsr hex2asc ;
0461   03d1
0462   0120   ldr r1,hex2val ;
0463   11b5
0464   1a35   outpp r1,pA ;
0465   003b   jsr chkstat ;
0466   03cb
0467   0120   ldr r1,hex1val ;
0468   11b4
0469   1a35   outpp r1,pA ;
046a   003b   jsr chkstat ;
046b   03cb
046c   0121   ldrv r1,SPC ;
046d   0020
046e   1a35   outpp r1,pA ;
046f   003c   rts ; 
0470   b133   rdchar: inpp r1,pB ; 
0471   0141   bitv r1,RXDVLD ; 
0472   0080
0473   1037   bra z,rdchar ; 
0474   fffc
0475   a133   inpp r1,pA ; 
0476   010b   andv r1,'hFF ; 
0477   00ff
0478   1028   str r1,inpchar ; 
0479   11b8
047a   003c   rts ; 
047b   0c2e   setyear: ldpv pC,hexval4_m ; 
047c   06b0
047d   003b   jsr tx_line ;
047e   0376
047f   003b   jsr asc2hex ; 
0480   040d
0481   2028   str r2,tmr1year ;
0482   11d0
0483   003b   jsr tx_prmt ;
0484   03bd
0485   003c   rts ; 
0486   0c2e   setmonth: ldpv pC,hexval4_m ; 
0487   06b0
0488   003b   jsr tx_line ;
0489   0376
048a   003b   jsr asc2hex ; 
048b   040d
048c   2028   str r2,tmr1month ;
048d   11d1
048e   003b   jsr tx_prmt ;
048f   03bd
0490   003c   rts ; 
0491   0c2e   setdate: ldpv pC,hexval4_m ; 
0492   06b0
0493   003b   jsr tx_line ;
0494   0376
0495   003b   jsr asc2hex ; 
0496   040d
0497   2028   str r2,tmr1date ;
0498   11d2
0499   003b   jsr tx_prmt ;
049a   03bd
049b   003c   rts ; 
049c   0c2e   sethour: ldpv pC,hexval4_m ; 
049d   06b0
049e   003b   jsr tx_line ;
049f   0376
04a0   003b   jsr asc2hex ; 
04a1   040d
04a2   2028   str r2,tmr1hour ;
04a3   11d3
04a4   220e   xor r2,r2 ;
04a5   2028   str r2,tmr1min ;
04a6   11d4
04a7   2028   str r2,tmr1sec ;
04a8   11d5
04a9   003b   jsr tx_prmt ;
04aa   03bd
04ab   003c   rts ; 
04ac   0c2e   setmin: ldpv pC,hexval4_m ; 
04ad   06b0
04ae   003b   jsr tx_line ;
04af   0376
04b0   003b   jsr asc2hex ; 
04b1   040d
04b2   2028   str r2,tmr1min ;
04b3   11d4
04b4   220e   xor r2,r2 ;
04b5   2028   str r2,tmr1sec ;
04b6   11d5
04b7   003b   jsr tx_prmt ;
04b8   03bd
04b9   003c   rts ; 
04ba   0c2e   setsec: ldpv pC,hexval4_m ; 
04bb   06b0
04bc   003b   jsr tx_line ;
04bd   0376
04be   003b   jsr asc2hex ; 
04bf   040d
04c0   2028   str r2,tmr1sec ;
04c1   11d5
04c2   003b   jsr tx_prmt ;
04c3   03bd
04c4   003c   rts ; 
04c5   0c2e   d_scpsrc: ldpv pC,hexval4_m ; 
04c6   06b0
04c7   003b   jsr tx_line ;
04c8   0376
04c9   003b   jsr asc2hex ; 
04ca   040d
04cb   020b   andv r2,'h0003 ; 
04cc   0003
04cd   0217   shl4 r2 ;
04ce   0217   shl4 r2 ;
04cf   0217   shl4 r2 ;
04d0   0132   inp r1,GPREG_07 ;
04d1   0007
04d2   010b   andv r1,SCOPE_NSK ;
04d3   cfff
04d4   210c   or r1,r2 ;
04d5   1034   outp r1,GPREG_07 ;
04d6   0007
04d7   003b   jsr tx_prmt ;
04d8   03bd
04d9   003c   rts ; 
04da   0c2e   d_trgsrc: ldpv pC,hexval4_m ; 
04db   06b0
04dc   003b   jsr tx_line ;
04dd   0376
04de   003b   jsr asc2hex ; 
04df   040d
04e0   020b   andv r2,'h0003 ; 
04e1   0003
04e2   0217   shl4 r2 ;
04e3   0217   shl4 r2 ;
04e4   0217   shl4 r2 ;
04e5   0215   shl r2 ;
04e6   0215   shl r2 ;
04e7   0132   inp r1,GPREG_07 ;
04e8   0007
04e9   010b   andv r1,TRIGS_NSK ;
04ea   3fff
04eb   210c   or r1,r2 ;
04ec   1034   outp r1,GPREG_07 ;
04ed   0007
04ee   003b   jsr tx_prmt ;
04ef   03bd
04f0   003c   rts ; 
04f1   0132   d_target: inp r1,GPREG_07 ; 
04f2   0007
04f3   010b   andv r1,TARGET_NSK ;
04f4   fffe
04f5   010d   orv r1,TARGET_MSK ;
04f6   0001
04f7   1034   outp r1,GPREG_07 ;
04f8   0007
04f9   001f   ldcv c0,10 ; 
04fa   000a
04fb   0000   d_target2: nop ;
04fc   0000   nop ; 
04fd   0038   dcjnz c0,d_target2 ;
04fe   04fb
04ff   0000   nop;  
0500   010b   andv r1,TARGET_NSK ;
0501   fffe
0502   1034   outp r1,GPREG_07 ;
0503   0007
0504   0c2e   ldpv pC,treset_m ; 
0505   06c6
0506   003b   jsr tx_line ; 
0507   0376
0508   003b   jsr tx_prmtx2 ;
0509   03c4
050a   003c   rts ; 
050b   0c2e   d_pcode: ldpv pC,hexval4_m ; 
050c   06b0
050d   003b   jsr tx_line ;
050e   0376
050f   003b   jsr asc2hex ; 
0510   040d
0511   020b   andv r2,PCODE_MSK ; 
0512   0002
0513   0132   inp r1,GPREG_07 ;
0514   0007
0515   010b   andv r1,PCODE_NSK ;
0516   fffd
0517   210c   or r1,r2 ;
0518   1034   outp r1,GPREG_07 ;
0519   0007
051a   003b   jsr tx_prmt ;
051b   03bd
051c   003c   rts ; 
051d   0c2e   irq_set: ldpv pC,hexval4_m ;
051e   06b0
051f   003b   jsr tx_line ;
0520   0376
0521   003b   jsr asc2hex ; 
0522   040d
0523   2028   str r2,irqmask ; 
0524   11ca
0525   220c   or r2,r2 ; 
0526   1037   bra z,irq_dis ;
0527   0004
0528   0045   irq_enb: sei ;
0529   843f   uport t4 ; 
052a   003c   rts ; 
052b   0046   irq_dis: cli ;
052c   043f   uport f4 ; 
052d   003c   rts ; 
052e   0c2e   d_pagenum: ldpv pC,hexval4_m ; 
052f   06b0
0530   003b   jsr tx_line ;
0531   0376
0532   003b   d_pagenum2:jsr asc2hex ; 
0533   040d
0534   020b   andv r2,'h0007 ; 
0535   0007
0536   272a   strx r2,p7,SR_IX ; 
0537   0000
0538   2042   ldpag r2 ; 
0539   003b   jsr tx_prmt ;
053a   03bd
053b   003c   d_pagenum3: rts ;
053c   012d   savebuf: ldp p1,buff_addr ; 
053d   11c0
053e   022d   ldp p2,buff_addrx ; 
053f   11c2
0540   0420   ldr r4,buff_len ; 
0541   11c1
0542   2026   ldmam m2 ; 
0543   001f   savebuf1: ldcv c0,1 ; 
0544   0001
0545   1224   ldrpi r2,p1 ; 
0546   222b   savebuf2: strpi r2,p2 ; 
0547   0218   shr4 r2 ;
0548   0218   shr4 r2 ;
0549   0038   dcjnz c0,savebuf2 ;
054a   0546
054b   0411   dec r4 ;
054c   9037   bra nz,savebuf1 ;
054d   fff6
054e   0026   ldmam m0 ; 
054f   111b   mvpr p1,r1 ;
0550   172a   strx r1,p7,IRL_IX ; 
0551   0004
0552   211b   mvpr p2,r1 ;
0553   172a   strx r1,p7,ERL_IX ; 
0554   0005
0555   003b   jsr tx_prmt ;
0556   03bd
0557   003c   rts ; 
0558   012d   restorebuf: ldp p1,buff_addr ;
0559   11c0
055a   022d   ldp p2,buff_addrx ; 
055b   11c2
055c   0420   ldr r4,buff_len ; 
055d   11c1
055e   1026   ldmam m1 ; 
055f   330e   restorebuf1:xor r3,r3 ;
0560   2224   ldrpi r2,p2 ; 
0561   230c   or r3,r2 ;
0562   2224   ldrpi r2,p2 ;
0563   0217   shl4 r2 ;
0564   0217   shl4 r2 ;
0565   230c   or r3,r2 ;
0566   312b   strpi r3,p1 ;
0567   0411   dec r4 ;
0568   9037   bra nz,restorebuf1 ;
0569   fff6
056a   0026   ldmam m0 ; 
056b   111b   mvpr p1,r1 ;
056c   172a   strx r1,p7,IRL_IX ; 
056d   0004
056e   211b   mvpr p2,r1 ;
056f   172a   strx r1,p7,ERL_IX ; 
0570   0005
0571   003b   jsr tx_prmt ;
0572   03bd
0573   003c   rts ; 
0574   660e   division: xor r6,r6 ; 
0575   4505   divstart: sub r5,r4 ;
0576   3037   bra s,divend ;
0577   0005
0578   5319   mvrr r5,r3 ; 
0579   0610   inc r6 ;
057a   0037   bra divstart ;
057b   fffa
057c   003c   divend: rts ;
057d   5513   monthchk: cmprv r5,2 ; 
057e   0002
057f   9037   bra ne,monthchk0 ; 
0580   0012
0581   6919   mvrr r6,r9 ;
0582   090b   andv r9,'h00ff ;
0583   00ff
0584   1037   bra z,month28 ; 
0585   0009
0586   090b   andv r9,'h0003 ; 
0587   0003
0588   9037   bra nz,month28 ; 
0589   0005
058a   0821   month29: ldrv r8,29 ;
058b   001d
058c   0037   bra monthchkend ; 
058d   001b
058e   0821   month28: ldrv r8,28 ;
058f   001c
0590   0037   bra monthchkend ;
0591   0017
0592   0541   monthchk0: bitv r5,8 ; 
0593   0008
0594   9037   bra nz,monthchk1 ;
0595   000d
0596   0541   bitv r5,1 ; 
0597   0001
0598   1037   bra z,month30 ;
0599   0005
059a   0821   month31: ldrv r8,31 ;
059b   001f
059c   0037   bra monthchkend ;
059d   000b
059e   0821   month30: ldrv r8,30 ;
059f   001e
05a0   0037   bra monthchkend ;
05a1   0007
05a2   0541   monthchk1: bitv r5,1 ; 
05a3   0001
05a4   1037   bra z,month31 ;
05a5   fff5
05a6   0037   bra month30 ;
05a7   fff7
05a8   003c   rts ; 
05a9   883f   hw_irq1: uport t8 ;
05aa   083f   uport f8 ;
05ab   003d   rti ; 
05ac   893f   hw_irq2: uport t9 ;
05ad   093f   hw_irq2_1: uport f9 ;
05ae   003d   rti ; 
05af   0120   hw_irq3: ldr r1,tmr1msec ;
05b0   11c8
05b1   110c   or r1,r1 ;
05b2   1037   bra z,hw_irq3_1 ;
05b3   0006
05b4   0111   dec r1 ;
05b5   1028   str r1,tmr1msec ;
05b6   11c8
05b7   0037   bra hw_irq3_2 ;
05b8   0002
05b9   8e3e   hw_irq3_1: uflag tE ; 
05ba   003d   hw_irq3_2: rti ;
05bb   0220   hw_irq4: ldr r2,tmr1min ; 
05bc   11d4
05bd   0320   ldr r3,tmr1hour ; 
05be   11d3
05bf   0420   ldr r4,tmr1date ; 
05c0   11d2
05c1   4719   mvrr r4,r7 ; 
05c2   0520   ldr r5,tmr1month ; 
05c3   11d1
05c4   0620   ldr r6,tmr1year ; 
05c5   11d0
05c6   0120   ldr r1,tmr1sec ; 
05c7   11d5
05c8   0110   inc r1 ;
05c9   1113   cmprv r1,60 ; 
05ca   003c
05cb   d037   bra lt,hw_irq4_1 ;
05cc   0038
05cd   110e   xor r1,r1 ;
05ce   0210   inc r2 ;
05cf   2213   cmprv r2,60 ; 
05d0   003c
05d1   d037   bra lt,hw_irq4_2 ;
05d2   0030
05d3   220e   xor r2,r2 ;
05d4   8a3e   uflag tA ; 
05d5   0310   inc r3 ;
05d6   3313   cmprv r3,24 ; 
05d7   0018
05d8   d037   bra lt,hw_irq4_3 ;
05d9   0027
05da   330e   xor r3,r3 ;
05db   040b   andv r4,'h00ff ;
05dc   00ff
05dd   070b   andv r7,'hff00 ;
05de   ff00
05df   0718   shr4 r7 ;
05e0   0718   shr4 r7 ;
05e1   0710   inc r7 ;
05e2   7713   cmprv r7,7 ; 
05e3   0007
05e4   d037   bra lt,hw_irq4_6 ;
05e5   0002
05e6   770e   xor r7,r7 ; 
05e7   0717   hw_irq4_6: shl4 r7 ;
05e8   0717   shl4 r7 ;
05e9   0410   inc r4 ; 
05ea   003b   jsr monthchk ; 
05eb   057d
05ec   8412   cmpr r4,r8 ; 
05ed   e037   bra le,hw_irq4_4 ;
05ee   000f
05ef   0421   ldrv r4,1 ;
05f0   0001
05f1   0510   inc r5 ;
05f2   5513   cmprv r5,12 ; 
05f3   000c
05f4   e037   bra le,hw_irq4_5 ;
05f5   0006
05f6   0521   ldrv r5,1 ; 
05f7   0001
05f8   0610   inc r6 ;
05f9   6028   str r6,tmr1year ;
05fa   11d0
05fb   5028   hw_irq4_5: str r5,tmr1month ;
05fc   11d1
05fd   740c   hw_irq4_4: or r4,r7 ;
05fe   4028   str r4,tmr1date ;
05ff   11d2
0600   3028   hw_irq4_3: str r3,tmr1hour ;
0601   11d3
0602   2028   hw_irq4_2: str r2,tmr1min ;
0603   11d4
0604   1028   hw_irq4_1: str r1,tmr1sec ;
0605   11d5
0606   003d   rti ; 
0607   003d   sw_irq1: rti ;
0608   003b   myapp: jsr testinc ;
0609   062b
060a   013f   uport f1 ;
060b   023f   uport f2 ;
060c   033f   uport f3 ;
060d   0120   ldr r1,myled ;
060e   11b3
060f   0110   inc r1 ;
0610   1028   str r1,myled ;
0611   11b3
0612   1113   cmprv r1,1 ;
0613   0001
0614   9037   bra ne,myapp2 ;
0615   0004
0616   813f   uport t1 ;
0617   0037   bra myappend ;
0618   0010
0619   1113   myapp2: cmprv r1,2 ;
061a   0002
061b   9037   bra ne,myapp3 ;
061c   0004
061d   823f   uport t2 ;
061e   0037   bra myappend ;
061f   0009
0620   1113   myapp3: cmprv r1,3 ;
0621   0003
0622   9037   bra ne,myappend ;
0623   0005
0624   833f   uport t3 ;
0625   110e   xor R1,R1 ;
0626   1028   str r1,myled ;
0627   11b3
0628   0d2e   myappend: ldpv pD,tempvar1 ; 
0629   1220
062a   003c   rts ; 
062b   0120   testinc: ldr r1,mycounter ;
062c   11b2
062d   011f   ldcv c1,31 ; 
062e   001f
062f   1d2b   testinc2: strpi r1,pD ;
0630   0110   inc r1 ;
0631   0138   dcjnz c1,testinc2 ;
0632   062f
0633   1028   str r1,mycounter ; 
0634   11b2
0635   003c   rts ; 
0636   833e   runapp: uflag t3 ;
0637   003c   rts ; 
0638   0053   version_m: dt "SW:040522-01 MasterTemplateFull";
0639   0057
063a   003a
063b   0030
063c   0034
063d   0030
063e   0035
063f   0032
0640   0032
0641   002d
0642   0030
0643   0031
0644   0020
0645   004d
0646   0061
0647   0073
0648   0074
0649   0065
064a   0072
064b   0054
064c   0065
064d   006d
064e   0070
064f   006c
0650   0061
0651   0074
0652   0065
0653   0046
0654   0075
0655   006c
0656   006c
0657   0000
0658   0020   memof_m: dt " Internal Memory Access";
0659   0049
065a   006e
065b   0074
065c   0065
065d   0072
065e   006e
065f   0061
0660   006c
0661   0020
0662   004d
0663   0065
0664   006d
0665   006f
0666   0072
0667   0079
0668   0020
0669   0041
066a   0063
066b   0063
066c   0065
066d   0073
066e   0073
066f   0000
0670   0020   memon_m: dt " External Memory Access";
0671   0045
0672   0078
0673   0074
0674   0065
0675   0072
0676   006e
0677   0061
0678   006c
0679   0020
067a   004d
067b   0065
067c   006d
067d   006f
067e   0072
067f   0079
0680   0020
0681   0041
0682   0063
0683   0063
0684   0065
0685   0073
0686   0073
0687   0000
0688   0020   membyte_m: dt " Byte Memory Access";
0689   0042
068a   0079
068b   0074
068c   0065
068d   0020
068e   004d
068f   0065
0690   006d
0691   006f
0692   0072
0693   0079
0694   0020
0695   0041
0696   0063
0697   0063
0698   0065
0699   0073
069a   0073
069b   0000
069c   0020   memword_m: dt " Word Memory Access";
069d   0057
069e   006f
069f   0072
06a0   0064
06a1   0020
06a2   004d
06a3   0065
06a4   006d
06a5   006f
06a6   0072
06a7   0079
06a8   0020
06a9   0041
06aa   0063
06ab   0063
06ac   0065
06ad   0073
06ae   0073
06af   0000
06b0   0020   hexval4_m: dt " Enter value [RET] = ";
06b1   0045
06b2   006e
06b3   0074
06b4   0065
06b5   0072
06b6   0020
06b7   0076
06b8   0061
06b9   006c
06ba   0075
06bb   0065
06bc   0020
06bd   005b
06be   0052
06bf   0045
06c0   0054
06c1   005d
06c2   0020
06c3   003d
06c4   0020
06c5   0000
06c6   0020   treset_m: dt " Target Reset done";
06c7   0054
06c8   0061
06c9   0072
06ca   0067
06cb   0065
06cc   0074
06cd   0020
06ce   0052
06cf   0065
06d0   0073
06d1   0065
06d2   0074
06d3   0020
06d4   0064
06d5   006f
06d6   006e
06d7   0065
06d8   0000
06d9   000d   promptx2: dw CR; 
06da   000a   dw LF; 
06db   000d   prompt: dw CR; 
06dc   000a   promptlf: dw LF; 
06dd   0000   dw NULL; 
06de   000d   promptcr: dw CR; 
06df   0000   dw NULL; 
06e0   0001   h2btab: dw 'h0001,'h0002,'h0004,'h0008 ;
06e1   0002
06e2   0004
06e3   0008
06e4   0010   dw 'h0010,'h0020,'h0040,'h0080 ;
06e5   0020
06e6   0040
06e7   0080
06e8   0100   dw 'h0100,'h0200,'h0400,'h0800 ;
06e9   0200
06ea   0400
06eb   0800
06ec   1000   dw 'h1000,'h2000,'h4000,'h8000 ;
06ed   2000
06ee   4000
06ef   8000
06f0   001b   cls_m: dw ESC ; 
06f1   005b   dt "[2J" ; 
06f2   0032
06f3   004a
06f4   0000
06f5   0000   dw NULL ; 
06f6   001b   chome_m: dw ESC ; 
06f7   005b   dt "[H" ; 
06f8   0048
06f9   0000
06fa   0000   dw NULL ; 
06fb   0064   kpst00: dw "d" ,"J" , d_debug, kpst10; 
06fc   004a
06fd   00de
06fe   072b
06ff   0073   dw "s" ,"J" , d_sysset, kpst30; 
0700   004a
0701   00d8
0702   0793
0703   0061   dw "a" ,"J" , d_appset, kpst40; 
0704   004a
0705   00d2
0706   07d7
0707   0076   dw "v" ,"J" , d_prgver, kpst00; 
0708   004a
0709   0091
070a   06fb
070b   004c   dw "L" ,"J" , BOOT_ADDR,kpst00; 
070c   004a
070d   3f00
070e   06fb
070f   0045   dw "E" ,"J" , echo_on, kpst00; 
0710   004a
0711   0087
0712   06fb
0713   0065   dw "e" ,"J" , echo_off, kpst00; 
0714   004a
0715   008c
0716   06fb
0717   0043   dw "C" ,"J" , enbscreen,kpst00; 
0718   004a
0719   00b4
071a   06fb
071b   0063   dw "c" ,"J" , disscreen,kpst00; 
071c   004a
071d   00b6
071e   06fb
071f   0049   dw "I" ,"J" , irq_set, kpst00; 
0720   004a
0721   051d
0722   06fb
0723   006b   dw "k" ,"J" , d_rtcval, kpst00; 
0724   004a
0725   009f
0726   06fb
0727   0000   dw NULL ,"J" , d_menu, kpst00; 
0728   004a
0729   00c7
072a   06fb
072b   0041   kpst10: dw "A" ,"J" , d_mema, kpst10; 
072c   004a
072d   0105
072e   072b
072f   0042   dw "B" ,"J" , d_memb, kpst10; 
0730   004a
0731   011f
0732   072b
0733   0050   dw "P" ,"J", d_pagenum,kpst10; 
0734   004a
0735   052e
0736   072b
0737   0064   dw "d" ,"J" , memdump, kpst10; 
0738   004a
0739   0262
073a   072b
073b   006e   dw "n" ,"J" , memnext, kpst10; 
073c   004a
073d   025b
073e   072b
073f   0066   dw "f" ,"J" , memfill, kpst10; 
0740   004a
0741   0314
0742   072b
0743   006c   dw "l" ,"J" , memlen, kpst10; 
0744   004a
0745   0307
0746   072b
0747   006d   dw "m" ,"S" , s_bitop, wpst01; 
0748   0053
0749   0142
074a   0813
074b   0077   dw "w" ,"S" , s_bitop, wpst01; 
074c   0053
074d   0142
074e   0813
074f   0073   dw "s" ,"S" , s_bitop wpst01; 
0750   0053
0751   0142
0752   0813
0753   0063   dw "c" ,"S" , s_bitop, wpst01; 
0754   0053
0755   0142
0756   0813
0757   0074   dw "t" ,"S" , s_bitop, wpst01; 
0758   0053
0759   0142
075a   0813
075b   0069   dw "i" ,"S" , s_bitop, wpst01; 
075c   0053
075d   0142
075e   0813
075f   0061   dw "a" ,"S" , s_bitop, wpst01; 
0760   0053
0761   0142
0762   0813
0763   006f   dw "o" ,"S" , s_bitop, wpst01; 
0764   0053
0765   0142
0766   0813
0767   0065   dw "e" ,"S" , s_bitop, wpst01; 
0768   0053
0769   0142
076a   0813
076b   0062   dw "b" ,"J" , d_base, kpst10; 
076c   004a
076d   0132
076e   072b
076f   0072   dw "r" ,"J" , d_aregs, kpst10; 
0770   004a
0771   00f1
0772   072b
0773   0076   dw "v" ,"J" , vardump, kpst10; 
0774   004a
0775   02af
0776   072b
0777   0068   dw "h" ,"J" , d_help, kpst10; 
0778   004a
0779   00e5
077a   072b
077b   0078   dw "x" ,"J" , d_menu, kpst00; 
077c   004a
077d   00c7
077e   06fb
077f   0020   dw " " ,"J" , d_debug, kpst10;
0780   004a
0781   00de
0782   072b
0783   0000   dw NULL ,"J" , d_nothing,kpst10;
0784   004a
0785   0141
0786   072b
0787   0068   kpst20: dw "h" ,"J" , d_help, kpst20; 
0788   004a
0789   00e5
078a   0787
078b   0078   dw "x" ,"J" , d_menu, kpst00; 
078c   004a
078d   00c7
078e   06fb
078f   0000   dw NULL ,"J" , d_help, kpst20; 
0790   004a
0791   00e5
0792   0787
0793   0073   kpst30: dw "s" ,"J", d_scpsrc, kpst30; 
0794   004a
0795   04c5
0796   0793
0797   0074   dw "t" ,"J", d_trgsrc, kpst30; 
0798   004a
0799   04da
079a   0793
079b   0062   dw "b" ,"J", d_base, kpst30; 
079c   004a
079d   0132
079e   0793
079f   0072   dw "r" ,"J", d_aregs, kpst30; 
07a0   004a
07a1   00f1
07a2   0793
07a3   0077   dw "w" ,"S", s_bitop, wpst01; 
07a4   0053
07a5   0142
07a6   0813
07a7   0052   dw "R" ,"J", d_target, kpst30; 
07a8   004a
07a9   04f1
07aa   0793
07ab   0057   dw "W" ,"J", d_pcode, kpst30; 
07ac   004a
07ad   050b
07ae   0793
07af   0059   dw "Y" ,"J", setyear, kpst30; 
07b0   004a
07b1   047b
07b2   0793
07b3   004d   dw "M" ,"J", setmonth, kpst30; 
07b4   004a
07b5   0486
07b6   0793
07b7   0044   dw "D" ,"J", setdate, kpst30; 
07b8   004a
07b9   0491
07ba   0793
07bb   0048   dw "H" ,"J", sethour, kpst30; 
07bc   004a
07bd   049c
07be   0793
07bf   0055   dw "U" ,"J", setmin, kpst30; 
07c0   004a
07c1   04ac
07c2   0793
07c3   0053   dw "S" ,"J", setsec, kpst30; 
07c4   004a
07c5   04ba
07c6   0793
07c7   006b   dw "k" ,"J", d_rtcval, kpst30; 
07c8   004a
07c9   009f
07ca   0793
07cb   0076   dw "v" ,"J", vardump, kpst30; 
07cc   004a
07cd   02af
07ce   0793
07cf   0078   dw "x" ,"J", d_menu, kpst00; 
07d0   004a
07d1   00c7
07d2   06fb
07d3   0000   dw NULL,"J", d_sysset, kpst30; 
07d4   004a
07d5   00d8
07d6   0793
07d7   0061   kpst40: dw "a" ,"J", runapp, kpst40; 
07d8   004a
07d9   0636
07da   07d7
07db   0031   dw "1" ,"J", setpar1, kpst40; 
07dc   004a
07dd   02c9
07de   07d7
07df   0032   dw "2" ,"J", setpar2, kpst40; 
07e0   004a
07e1   02da
07e2   07d7
07e3   0064   dw "d" ,"J" , bufdump, kpst40; 
07e4   004a
07e5   02ec
07e6   07d7
07e7   0053   dw "S" ,"J", savebuf, kpst40; 
07e8   004a
07e9   053c
07ea   07d7
07eb   0052   dw "R" ,"J", restorebuf, kpst40; 
07ec   004a
07ed   0558
07ee   07d7
07ef   006b   dw "k" ,"J", d_rtcval, kpst40; 
07f0   004a
07f1   009f
07f2   07d7
07f3   0072   dw "r" ,"J", d_aregs, kpst40; 
07f4   004a
07f5   00f1
07f6   07d7
07f7   0076   dw "v" ,"J", vardump, kpst40; 
07f8   004a
07f9   02af
07fa   07d7
07fb   0068   dw "h" ,"J", d_helpa, kpst40; 
07fc   004a
07fd   00eb
07fe   07d7
07ff   0078   dw "x" ,"J", d_menu, kpst00; 
0800   004a
0801   00c7
0802   06fb
0803   0000   dw NULL,"J", d_appset, kpst40; 
0804   004a
0805   00d2
0806   07d7
0807   000d   wpst00: dw CR ,"R" , a_quit, kpst00; 
0808   0052
0809   0257
080a   06fb
080b   0071   dw "q" ,"R" , a_quit, kpst00; 
080c   0052
080d   0257
080e   06fb
080f   0000   dw NULL ,"J" , a_regdat, wpst00; 
0810   004a
0811   01a5
0812   0807
0813   002c   wpst01: dw "," ,"J" , a_setadd, wpst02; 
0814   004a
0815   0189
0816   082f
0817   0020   dw " " ,"J" , a_setadd, wpst02; 
0818   004a
0819   0189
081a   082f
081b   002d   dw "-" ,"J" , a_setadd, wpst03; 
081c   004a
081d   0189
081e   083b
081f   006e   dw "n" ,"J" , a_setadd, wpst03; 
0820   004a
0821   0189
0822   083b
0823   000d   dw CR ,"R" , a_getval, kpst00; 
0824   0052
0825   0165
0826   06fb
0827   0071   dw "q" ,"R" , a_quit, kpst00; 
0828   0052
0829   0257
082a   06fb
082b   0000   dw NULL ,"J" , a_getadr, wpst01; 
082c   004a
082d   0150
082e   0813
082f   000d   wpst02: dw CR ,"R" , a_wrval1, kpst00; 
0830   0052
0831   01a8
0832   06fb
0833   0071   dw "q" ,"R" , a_quit, kpst00; 
0834   0052
0835   0257
0836   06fb
0837   0000   dw NULL ,"J" , a_regdat, wpst02; 
0838   004a
0839   01a5
083a   082f
083b   000d   wpst03: dw CR ,"R" , a_wrval2, kpst00; 
083c   0052
083d   01ad
083e   06fb
083f   0071   dw "q" ,"R" , a_quit, kpst00; 
0840   0052
0841   0257
0842   06fb
0843   0000   dw NULL ,"J" , a_regdat, wpst03; 
0844   004a
0845   01a5
0846   083b
0847   007c   menu: dt "|Main Menu|";
0848   004d
0849   0061
084a   0069
084b   006e
084c   0020
084d   004d
084e   0065
084f   006e
0850   0075
0851   007c
0852   0000
0853   0020   dt " a = application";
0854   0061
0855   0020
0856   003d
0857   0020
0858   0061
0859   0070
085a   0070
085b   006c
085c   0069
085d   0063
085e   0061
085f   0074
0860   0069
0861   006f
0862   006e
0863   0000
0864   0020   dt " s = system setup";
0865   0073
0866   0020
0867   003d
0868   0020
0869   0073
086a   0079
086b   0073
086c   0074
086d   0065
086e   006d
086f   0020
0870   0073
0871   0065
0872   0074
0873   0075
0874   0070
0875   0000
0876   0020   dt " d = debug";
0877   0064
0878   0020
0879   003d
087a   0020
087b   0064
087c   0065
087d   0062
087e   0075
087f   0067
0880   0000
0881   0020   dt " v = version";
0882   0076
0883   0020
0884   003d
0885   0020
0886   0076
0887   0065
0888   0072
0889   0073
088a   0069
088b   006f
088c   006e
088d   0000
088e   0020   dt " E = Echo ON";
088f   0045
0890   0020
0891   003d
0892   0020
0893   0045
0894   0063
0895   0068
0896   006f
0897   0020
0898   004f
0899   004e
089a   0000
089b   0020   dt " e = echo OFF";
089c   0065
089d   0020
089e   003d
089f   0020
08a0   0065
08a1   0063
08a2   0068
08a3   006f
08a4   0020
08a5   004f
08a6   0046
08a7   0046
08a8   0000
08a9   0020   dt " C = Clear screen/Home ON";
08aa   0043
08ab   0020
08ac   003d
08ad   0020
08ae   0043
08af   006c
08b0   0065
08b1   0061
08b2   0072
08b3   0020
08b4   0073
08b5   0063
08b6   0072
08b7   0065
08b8   0065
08b9   006e
08ba   002f
08bb   0048
08bc   006f
08bd   006d
08be   0065
08bf   0020
08c0   004f
08c1   004e
08c2   0000
08c3   0020   dt " c = Clear screen/Home OFF";
08c4   0063
08c5   0020
08c6   003d
08c7   0020
08c8   0043
08c9   006c
08ca   0065
08cb   0061
08cc   0072
08cd   0020
08ce   0073
08cf   0063
08d0   0072
08d1   0065
08d2   0065
08d3   006e
08d4   002f
08d5   0048
08d6   006f
08d7   006d
08d8   0065
08d9   0020
08da   004f
08db   0046
08dc   0046
08dd   0000
08de   0020   dt " I = IRQ mask";
08df   0049
08e0   0020
08e1   003d
08e2   0020
08e3   0049
08e4   0052
08e5   0051
08e6   0020
08e7   006d
08e8   0061
08e9   0073
08ea   006b
08eb   0000
08ec   0020   dt " k = display clock ";
08ed   006b
08ee   0020
08ef   003d
08f0   0020
08f1   0064
08f2   0069
08f3   0073
08f4   0070
08f5   006c
08f6   0061
08f7   0079
08f8   0020
08f9   0063
08fa   006c
08fb   006f
08fc   0063
08fd   006b
08fe   0020
08ff   0000
0900   0020   dt " L = Load Program *.mem";
0901   004c
0902   0020
0903   003d
0904   0020
0905   004c
0906   006f
0907   0061
0908   0064
0909   0020
090a   0050
090b   0072
090c   006f
090d   0067
090e   0072
090f   0061
0910   006d
0911   0020
0912   002a
0913   002e
0914   006d
0915   0065
0916   006d
0917   0000
0918   007c   dt "|||";
0919   007c
091a   007c
091b   0000
091c   0003   dw ETX;
091d   007c   debug_m: dt "|Memory/Register/IO Menu|";
091e   004d
091f   0065
0920   006d
0921   006f
0922   0072
0923   0079
0924   002f
0925   0052
0926   0065
0927   0067
0928   0069
0929   0073
092a   0074
092b   0065
092c   0072
092d   002f
092e   0049
092f   004f
0930   0020
0931   004d
0932   0065
0933   006e
0934   0075
0935   007c
0936   0000
0937   0020   dt " A = memory Access mode";
0938   0041
0939   0020
093a   003d
093b   0020
093c   006d
093d   0065
093e   006d
093f   006f
0940   0072
0941   0079
0942   0020
0943   0041
0944   0063
0945   0063
0946   0065
0947   0073
0948   0073
0949   0020
094a   006d
094b   006f
094c   0064
094d   0065
094e   0000
094f   0020   dt " B = memory Byte mode";
0950   0042
0951   0020
0952   003d
0953   0020
0954   006d
0955   0065
0956   006d
0957   006f
0958   0072
0959   0079
095a   0020
095b   0042
095c   0079
095d   0074
095e   0065
095f   0020
0960   006d
0961   006f
0962   0064
0963   0065
0964   0000
0965   0020   dt " P = external memory Page";
0966   0050
0967   0020
0968   003d
0969   0020
096a   0065
096b   0078
096c   0074
096d   0065
096e   0072
096f   006e
0970   0061
0971   006c
0972   0020
0973   006d
0974   0065
0975   006d
0976   006f
0977   0072
0978   0079
0979   0020
097a   0050
097b   0061
097c   0067
097d   0065
097e   0000
097f   0020   dt " m = Memory write/read";
0980   006d
0981   0020
0982   003d
0983   0020
0984   004d
0985   0065
0986   006d
0987   006f
0988   0072
0989   0079
098a   0020
098b   0077
098c   0072
098d   0069
098e   0074
098f   0065
0990   002f
0991   0072
0992   0065
0993   0061
0994   0064
0995   0000
0996   0020   dt " d = Memory dump";
0997   0064
0998   0020
0999   003d
099a   0020
099b   004d
099c   0065
099d   006d
099e   006f
099f   0072
09a0   0079
09a1   0020
09a2   0064
09a3   0075
09a4   006d
09a5   0070
09a6   0000
09a7   0020   dt " n = Next dump";
09a8   006e
09a9   0020
09aa   003d
09ab   0020
09ac   004e
09ad   0065
09ae   0078
09af   0074
09b0   0020
09b1   0064
09b2   0075
09b3   006d
09b4   0070
09b5   0000
09b6   0020   dt " f = fill memory address/value (AAAA,vvvv)";
09b7   0066
09b8   0020
09b9   003d
09ba   0020
09bb   0066
09bc   0069
09bd   006c
09be   006c
09bf   0020
09c0   006d
09c1   0065
09c2   006d
09c3   006f
09c4   0072
09c5   0079
09c6   0020
09c7   0061
09c8   0064
09c9   0064
09ca   0072
09cb   0065
09cc   0073
09cd   0073
09ce   002f
09cf   0076
09d0   0061
09d1   006c
09d2   0075
09d3   0065
09d4   0020
09d5   0028
09d6   0041
09d7   0041
09d8   0041
09d9   0041
09da   002c
09db   0076
09dc   0076
09dd   0076
09de   0076
09df   0029
09e0   0000
09e1   0020   dt " l = set length/increment (LLLL,iiii)";
09e2   006c
09e3   0020
09e4   003d
09e5   0020
09e6   0073
09e7   0065
09e8   0074
09e9   0020
09ea   006c
09eb   0065
09ec   006e
09ed   0067
09ee   0074
09ef   0068
09f0   002f
09f1   0069
09f2   006e
09f3   0063
09f4   0072
09f5   0065
09f6   006d
09f7   0065
09f8   006e
09f9   0074
09fa   0020
09fb   0028
09fc   004c
09fd   004c
09fe   004c
09ff   004c
0a00   002c
0a01   0069
0a02   0069
0a03   0069
0a04   0069
0a05   0029
0a06   0000
0a07   0000   dt "";
0a08   0020   dt " w = Write/read port/register";
0a09   0077
0a0a   0020
0a0b   003d
0a0c   0020
0a0d   0057
0a0e   0072
0a0f   0069
0a10   0074
0a11   0065
0a12   002f
0a13   0072
0a14   0065
0a15   0061
0a16   0064
0a17   0020
0a18   0070
0a19   006f
0a1a   0072
0a1b   0074
0a1c   002f
0a1d   0072
0a1e   0065
0a1f   0067
0a20   0069
0a21   0073
0a22   0074
0a23   0065
0a24   0072
0a25   0000
0a26   0020   dt " s = Set reg bit";
0a27   0073
0a28   0020
0a29   003d
0a2a   0020
0a2b   0053
0a2c   0065
0a2d   0074
0a2e   0020
0a2f   0072
0a30   0065
0a31   0067
0a32   0020
0a33   0062
0a34   0069
0a35   0074
0a36   0000
0a37   0020   dt " c = Clear reg bit";
0a38   0063
0a39   0020
0a3a   003d
0a3b   0020
0a3c   0043
0a3d   006c
0a3e   0065
0a3f   0061
0a40   0072
0a41   0020
0a42   0072
0a43   0065
0a44   0067
0a45   0020
0a46   0062
0a47   0069
0a48   0074
0a49   0000
0a4a   0020   dt " t = Toggle reg bit";
0a4b   0074
0a4c   0020
0a4d   003d
0a4e   0020
0a4f   0054
0a50   006f
0a51   0067
0a52   0067
0a53   006c
0a54   0065
0a55   0020
0a56   0072
0a57   0065
0a58   0067
0a59   0020
0a5a   0062
0a5b   0069
0a5c   0074
0a5d   0000
0a5e   0020   dt " i = Pulse reg bit";
0a5f   0069
0a60   0020
0a61   003d
0a62   0020
0a63   0050
0a64   0075
0a65   006c
0a66   0073
0a67   0065
0a68   0020
0a69   0072
0a6a   0065
0a6b   0067
0a6c   0020
0a6d   0062
0a6e   0069
0a6f   0074
0a70   0000
0a71   0020   dt " a = and";
0a72   0061
0a73   0020
0a74   003d
0a75   0020
0a76   0061
0a77   006e
0a78   0064
0a79   0000
0a7a   0020   dt " o = or";
0a7b   006f
0a7c   0020
0a7d   003d
0a7e   0020
0a7f   006f
0a80   0072
0a81   0000
0a82   0020   dt " e = xor";
0a83   0065
0a84   0020
0a85   003d
0a86   0020
0a87   0078
0a88   006f
0a89   0072
0a8a   0000
0a8b   0000   dt "";
0a8c   0020   dt " b = set Base I/O/Registers address";
0a8d   0062
0a8e   0020
0a8f   003d
0a90   0020
0a91   0073
0a92   0065
0a93   0074
0a94   0020
0a95   0042
0a96   0061
0a97   0073
0a98   0065
0a99   0020
0a9a   0049
0a9b   002f
0a9c   004f
0a9d   002f
0a9e   0052
0a9f   0065
0aa0   0067
0aa1   0069
0aa2   0073
0aa3   0074
0aa4   0065
0aa5   0072
0aa6   0073
0aa7   0020
0aa8   0061
0aa9   0064
0aaa   0064
0aab   0072
0aac   0065
0aad   0073
0aae   0073
0aaf   0000
0ab0   0020   dt " r = Read all Input ports/registers";
0ab1   0072
0ab2   0020
0ab3   003d
0ab4   0020
0ab5   0052
0ab6   0065
0ab7   0061
0ab8   0064
0ab9   0020
0aba   0061
0abb   006c
0abc   006c
0abd   0020
0abe   0049
0abf   006e
0ac0   0070
0ac1   0075
0ac2   0074
0ac3   0020
0ac4   0070
0ac5   006f
0ac6   0072
0ac7   0074
0ac8   0073
0ac9   002f
0aca   0072
0acb   0065
0acc   0067
0acd   0069
0ace   0073
0acf   0074
0ad0   0065
0ad1   0072
0ad2   0073
0ad3   0000
0ad4   0020   dt " v = display variables";
0ad5   0076
0ad6   0020
0ad7   003d
0ad8   0020
0ad9   0064
0ada   0069
0adb   0073
0adc   0070
0add   006c
0ade   0061
0adf   0079
0ae0   0020
0ae1   0076
0ae2   0061
0ae3   0072
0ae4   0069
0ae5   0061
0ae6   0062
0ae7   006c
0ae8   0065
0ae9   0073
0aea   0000
0aeb   0000   dt "";
0aec   0020   dt " h = HELP";
0aed   0068
0aee   0020
0aef   003d
0af0   0020
0af1   0048
0af2   0045
0af3   004c
0af4   0050
0af5   0000
0af6   0020   dt " x = exit";
0af7   0078
0af8   0020
0af9   003d
0afa   0020
0afb   0065
0afc   0078
0afd   0069
0afe   0074
0aff   0000
0b00   007c   dt "||||";
0b01   007c
0b02   007c
0b03   007c
0b04   0000
0b05   0003   dw ETX;
0b06   007c   sysset_m:dt "|System Setup|";
0b07   0053
0b08   0079
0b09   0073
0b0a   0074
0b0b   0065
0b0c   006d
0b0d   0020
0b0e   0053
0b0f   0065
0b10   0074
0b11   0075
0b12   0070
0b13   007c
0b14   0000
0b15   0020   dt " t = trigger source ( 0 to 3)";
0b16   0074
0b17   0020
0b18   003d
0b19   0020
0b1a   0074
0b1b   0072
0b1c   0069
0b1d   0067
0b1e   0067
0b1f   0065
0b20   0072
0b21   0020
0b22   0073
0b23   006f
0b24   0075
0b25   0072
0b26   0063
0b27   0065
0b28   0020
0b29   0028
0b2a   0020
0b2b   0030
0b2c   0020
0b2d   0074
0b2e   006f
0b2f   0020
0b30   0033
0b31   0029
0b32   0000
0b33   0020   dt " s = scope Source ( 0 to 3)";
0b34   0073
0b35   0020
0b36   003d
0b37   0020
0b38   0073
0b39   0063
0b3a   006f
0b3b   0070
0b3c   0065
0b3d   0020
0b3e   0053
0b3f   006f
0b40   0075
0b41   0072
0b42   0063
0b43   0065
0b44   0020
0b45   0028
0b46   0020
0b47   0030
0b48   0020
0b49   0074
0b4a   006f
0b4b   0020
0b4c   0033
0b4d   0029
0b4e   0000
0b4f   0000   dt "";
0b50   0020   dt " b = set Base reg address";
0b51   0062
0b52   0020
0b53   003d
0b54   0020
0b55   0073
0b56   0065
0b57   0074
0b58   0020
0b59   0042
0b5a   0061
0b5b   0073
0b5c   0065
0b5d   0020
0b5e   0072
0b5f   0065
0b60   0067
0b61   0020
0b62   0061
0b63   0064
0b64   0064
0b65   0072
0b66   0065
0b67   0073
0b68   0073
0b69   0000
0b6a   0020   dt " r = Read all registers";
0b6b   0072
0b6c   0020
0b6d   003d
0b6e   0020
0b6f   0052
0b70   0065
0b71   0061
0b72   0064
0b73   0020
0b74   0061
0b75   006c
0b76   006c
0b77   0020
0b78   0072
0b79   0065
0b7a   0067
0b7b   0069
0b7c   0073
0b7d   0074
0b7e   0065
0b7f   0072
0b80   0073
0b81   0000
0b82   0020   dt " w = Write/read port/register";
0b83   0077
0b84   0020
0b85   003d
0b86   0020
0b87   0057
0b88   0072
0b89   0069
0b8a   0074
0b8b   0065
0b8c   002f
0b8d   0072
0b8e   0065
0b8f   0061
0b90   0064
0b91   0020
0b92   0070
0b93   006f
0b94   0072
0b95   0074
0b96   002f
0b97   0072
0b98   0065
0b99   0067
0b9a   0069
0b9b   0073
0b9c   0074
0b9d   0065
0b9e   0072
0b9f   0000
0ba0   0000   dt "";
0ba1   0020   dt " Y = Year";
0ba2   0059
0ba3   0020
0ba4   003d
0ba5   0020
0ba6   0059
0ba7   0065
0ba8   0061
0ba9   0072
0baa   0000
0bab   0020   dt " M = Month";
0bac   004d
0bad   0020
0bae   003d
0baf   0020
0bb0   004d
0bb1   006f
0bb2   006e
0bb3   0074
0bb4   0068
0bb5   0000
0bb6   0020   dt " D = day/DATE";
0bb7   0044
0bb8   0020
0bb9   003d
0bba   0020
0bbb   0064
0bbc   0061
0bbd   0079
0bbe   002f
0bbf   0044
0bc0   0041
0bc1   0054
0bc2   0045
0bc3   0000
0bc4   0020   dt " H = Hour";
0bc5   0048
0bc6   0020
0bc7   003d
0bc8   0020
0bc9   0048
0bca   006f
0bcb   0075
0bcc   0072
0bcd   0000
0bce   0020   dt " U = minUte";
0bcf   0055
0bd0   0020
0bd1   003d
0bd2   0020
0bd3   006d
0bd4   0069
0bd5   006e
0bd6   0055
0bd7   0074
0bd8   0065
0bd9   0000
0bda   0020   dt " S = Sec";
0bdb   0053
0bdc   0020
0bdd   003d
0bde   0020
0bdf   0053
0be0   0065
0be1   0063
0be2   0000
0be3   0020   dt " k = display clock ";
0be4   006b
0be5   0020
0be6   003d
0be7   0020
0be8   0064
0be9   0069
0bea   0073
0beb   0070
0bec   006c
0bed   0061
0bee   0079
0bef   0020
0bf0   0063
0bf1   006c
0bf2   006f
0bf3   0063
0bf4   006b
0bf5   0020
0bf6   0000
0bf7   0000   dt "";
0bf8   0020   dt " R = target Reset";
0bf9   0052
0bfa   0020
0bfb   003d
0bfc   0020
0bfd   0074
0bfe   0061
0bff   0072
0c00   0067
0c01   0065
0c02   0074
0c03   0020
0c04   0052
0c05   0065
0c06   0073
0c07   0065
0c08   0074
0c09   0000
0c0a   0020   dt " W = Write protect (2 or 0)";
0c0b   0057
0c0c   0020
0c0d   003d
0c0e   0020
0c0f   0057
0c10   0072
0c11   0069
0c12   0074
0c13   0065
0c14   0020
0c15   0070
0c16   0072
0c17   006f
0c18   0074
0c19   0065
0c1a   0063
0c1b   0074
0c1c   0020
0c1d   0028
0c1e   0032
0c1f   0020
0c20   006f
0c21   0072
0c22   0020
0c23   0030
0c24   0029
0c25   0000
0c26   0020   dt " v = display variables";
0c27   0076
0c28   0020
0c29   003d
0c2a   0020
0c2b   0064
0c2c   0069
0c2d   0073
0c2e   0070
0c2f   006c
0c30   0061
0c31   0079
0c32   0020
0c33   0076
0c34   0061
0c35   0072
0c36   0069
0c37   0061
0c38   0062
0c39   006c
0c3a   0065
0c3b   0073
0c3c   0000
0c3d   0020   dt " x = exit";
0c3e   0078
0c3f   0020
0c40   003d
0c41   0020
0c42   0065
0c43   0078
0c44   0069
0c45   0074
0c46   0000
0c47   007c   dt "|||";
0c48   007c
0c49   007c
0c4a   0000
0c4b   0003   dw ETX;
0c4c   007c   appset_m:dt "|Application|";
0c4d   0041
0c4e   0070
0c4f   0070
0c50   006c
0c51   0069
0c52   0063
0c53   0061
0c54   0074
0c55   0069
0c56   006f
0c57   006e
0c58   007c
0c59   0000
0c5a   0020   dt " a = run myapp once";
0c5b   0061
0c5c   0020
0c5d   003d
0c5e   0020
0c5f   0072
0c60   0075
0c61   006e
0c62   0020
0c63   006d
0c64   0079
0c65   0061
0c66   0070
0c67   0070
0c68   0020
0c69   006f
0c6a   006e
0c6b   0063
0c6c   0065
0c6d   0000
0c6e   0000   dt "";
0c6f   0020   dt " 1 = set int RAM buff_length,buff_addr";
0c70   0031
0c71   0020
0c72   003d
0c73   0020
0c74   0073
0c75   0065
0c76   0074
0c77   0020
0c78   0069
0c79   006e
0c7a   0074
0c7b   0020
0c7c   0052
0c7d   0041
0c7e   004d
0c7f   0020
0c80   0062
0c81   0075
0c82   0066
0c83   0066
0c84   005f
0c85   006c
0c86   0065
0c87   006e
0c88   0067
0c89   0074
0c8a   0068
0c8b   002c
0c8c   0062
0c8d   0075
0c8e   0066
0c8f   0066
0c90   005f
0c91   0061
0c92   0064
0c93   0064
0c94   0072
0c95   0000
0c96   0020   dt " 2 = set ext RAM page and address";
0c97   0032
0c98   0020
0c99   003d
0c9a   0020
0c9b   0073
0c9c   0065
0c9d   0074
0c9e   0020
0c9f   0065
0ca0   0078
0ca1   0074
0ca2   0020
0ca3   0052
0ca4   0041
0ca5   004d
0ca6   0020
0ca7   0070
0ca8   0061
0ca9   0067
0caa   0065
0cab   0020
0cac   0061
0cad   006e
0cae   0064
0caf   0020
0cb0   0061
0cb1   0064
0cb2   0064
0cb3   0072
0cb4   0065
0cb5   0073
0cb6   0073
0cb7   0000
0cb8   0020   dt " S = Save buffer";
0cb9   0053
0cba   0020
0cbb   003d
0cbc   0020
0cbd   0053
0cbe   0061
0cbf   0076
0cc0   0065
0cc1   0020
0cc2   0062
0cc3   0075
0cc4   0066
0cc5   0066
0cc6   0065
0cc7   0072
0cc8   0000
0cc9   0020   dt " R = Restore buffer";
0cca   0052
0ccb   0020
0ccc   003d
0ccd   0020
0cce   0052
0ccf   0065
0cd0   0073
0cd1   0074
0cd2   006f
0cd3   0072
0cd4   0065
0cd5   0020
0cd6   0062
0cd7   0075
0cd8   0066
0cd9   0066
0cda   0065
0cdb   0072
0cdc   0000
0cdd   0000   dt "";
0cde   0020   dt " d = dump buff_addr";
0cdf   0064
0ce0   0020
0ce1   003d
0ce2   0020
0ce3   0064
0ce4   0075
0ce5   006d
0ce6   0070
0ce7   0020
0ce8   0062
0ce9   0075
0cea   0066
0ceb   0066
0cec   005f
0ced   0061
0cee   0064
0cef   0064
0cf0   0072
0cf1   0000
0cf2   0020   dt " r = Read all registers";
0cf3   0072
0cf4   0020
0cf5   003d
0cf6   0020
0cf7   0052
0cf8   0065
0cf9   0061
0cfa   0064
0cfb   0020
0cfc   0061
0cfd   006c
0cfe   006c
0cff   0020
0d00   0072
0d01   0065
0d02   0067
0d03   0069
0d04   0073
0d05   0074
0d06   0065
0d07   0072
0d08   0073
0d09   0000
0d0a   0020   dt " v = display variables";
0d0b   0076
0d0c   0020
0d0d   003d
0d0e   0020
0d0f   0064
0d10   0069
0d11   0073
0d12   0070
0d13   006c
0d14   0061
0d15   0079
0d16   0020
0d17   0076
0d18   0061
0d19   0072
0d1a   0069
0d1b   0061
0d1c   0062
0d1d   006c
0d1e   0065
0d1f   0073
0d20   0000
0d21   0000   dt "";
0d22   0020   dt " k = display clock ";
0d23   006b
0d24   0020
0d25   003d
0d26   0020
0d27   0064
0d28   0069
0d29   0073
0d2a   0070
0d2b   006c
0d2c   0061
0d2d   0079
0d2e   0020
0d2f   0063
0d30   006c
0d31   006f
0d32   0063
0d33   006b
0d34   0020
0d35   0000
0d36   0020   dt " h = HELP";
0d37   0068
0d38   0020
0d39   003d
0d3a   0020
0d3b   0048
0d3c   0045
0d3d   004c
0d3e   0050
0d3f   0000
0d40   0020   dt " x = exit";
0d41   0078
0d42   0020
0d43   003d
0d44   0020
0d45   0065
0d46   0078
0d47   0069
0d48   0074
0d49   0000
0d4a   007c   dt "|||";
0d4b   007c
0d4c   007c
0d4d   0000
0d4e   0003   dw ETX;
0d4f   007c   help_a: dt "| H E L P |";
0d50   0020
0d51   0048
0d52   0020
0d53   0045
0d54   0020
0d55   004c
0d56   0020
0d57   0050
0d58   0020
0d59   007c
0d5a   0000
0d5b   0020   dt " Space key will refresh the screen";
0d5c   0053
0d5d   0070
0d5e   0061
0d5f   0063
0d60   0065
0d61   0020
0d62   006b
0d63   0065
0d64   0079
0d65   0020
0d66   0077
0d67   0069
0d68   006c
0d69   006c
0d6a   0020
0d6b   0072
0d6c   0065
0d6d   0066
0d6e   0072
0d6f   0065
0d70   0073
0d71   0068
0d72   0020
0d73   0074
0d74   0068
0d75   0065
0d76   0020
0d77   0073
0d78   0063
0d79   0072
0d7a   0065
0d7b   0065
0d7c   006e
0d7d   0000
0d7e   0020   dt " Enter x to exit (previous menu)";
0d7f   0045
0d80   006e
0d81   0074
0d82   0065
0d83   0072
0d84   0020
0d85   0078
0d86   0020
0d87   0074
0d88   006f
0d89   0020
0d8a   0065
0d8b   0078
0d8c   0069
0d8d   0074
0d8e   0020
0d8f   0028
0d90   0070
0d91   0072
0d92   0065
0d93   0076
0d94   0069
0d95   006f
0d96   0075
0d97   0073
0d98   0020
0d99   006d
0d9a   0065
0d9b   006e
0d9c   0075
0d9d   0029
0d9e   0000
0d9f   0020   dt " Enter values in HEXADECIMAL (0-9, a-f)";
0da0   0045
0da1   006e
0da2   0074
0da3   0065
0da4   0072
0da5   0020
0da6   0076
0da7   0061
0da8   006c
0da9   0075
0daa   0065
0dab   0073
0dac   0020
0dad   0069
0dae   006e
0daf   0020
0db0   0048
0db1   0045
0db2   0058
0db3   0041
0db4   0044
0db5   0045
0db6   0043
0db7   0049
0db8   004d
0db9   0041
0dba   004c
0dbb   0020
0dbc   0028
0dbd   0030
0dbe   002d
0dbf   0039
0dc0   002c
0dc1   0020
0dc2   0061
0dc3   002d
0dc4   0066
0dc5   0029
0dc6   0000
0dc7   0000   dt "";
0dc8   007c   dt "| Commands |";
0dc9   0020
0dca   0043
0dcb   006f
0dcc   006d
0dcd   006d
0dce   0061
0dcf   006e
0dd0   0064
0dd1   0073
0dd2   0020
0dd3   007c
0dd4   0000
0dd5   0003   dw ETX;
0dd6   007c   help_m: dt "| H E L P |";
0dd7   0020
0dd8   0048
0dd9   0020
0dda   0045
0ddb   0020
0ddc   004c
0ddd   0020
0dde   0050
0ddf   0020
0de0   007c
0de1   0000
0de2   0020   dt " Space key will refresh the screen";
0de3   0053
0de4   0070
0de5   0061
0de6   0063
0de7   0065
0de8   0020
0de9   006b
0dea   0065
0deb   0079
0dec   0020
0ded   0077
0dee   0069
0def   006c
0df0   006c
0df1   0020
0df2   0072
0df3   0065
0df4   0066
0df5   0072
0df6   0065
0df7   0073
0df8   0068
0df9   0020
0dfa   0074
0dfb   0068
0dfc   0065
0dfd   0020
0dfe   0073
0dff   0063
0e00   0072
0e01   0065
0e02   0065
0e03   006e
0e04   0000
0e05   0020   dt " Enter x to exit (previous menu)";
0e06   0045
0e07   006e
0e08   0074
0e09   0065
0e0a   0072
0e0b   0020
0e0c   0078
0e0d   0020
0e0e   0074
0e0f   006f
0e10   0020
0e11   0065
0e12   0078
0e13   0069
0e14   0074
0e15   0020
0e16   0028
0e17   0070
0e18   0072
0e19   0065
0e1a   0076
0e1b   0069
0e1c   006f
0e1d   0075
0e1e   0073
0e1f   0020
0e20   006d
0e21   0065
0e22   006e
0e23   0075
0e24   0029
0e25   0000
0e26   0020   dt " Enter values in HEXADECIMAL";
0e27   0045
0e28   006e
0e29   0074
0e2a   0065
0e2b   0072
0e2c   0020
0e2d   0076
0e2e   0061
0e2f   006c
0e30   0075
0e31   0065
0e32   0073
0e33   0020
0e34   0069
0e35   006e
0e36   0020
0e37   0048
0e38   0045
0e39   0058
0e3a   0041
0e3b   0044
0e3c   0045
0e3d   0043
0e3e   0049
0e3f   004d
0e40   0041
0e41   004c
0e42   0000
0e43   0000   dt "";
0e44   007c   dt "| Memory Commands |";
0e45   0020
0e46   004d
0e47   0065
0e48   006d
0e49   006f
0e4a   0072
0e4b   0079
0e4c   0020
0e4d   0043
0e4e   006f
0e4f   006d
0e50   006d
0e51   0061
0e52   006e
0e53   0064
0e54   0073
0e55   0020
0e56   007c
0e57   0000
0e58   0020   dt " A = Memory access (toggle)";
0e59   0041
0e5a   0020
0e5b   003d
0e5c   0020
0e5d   004d
0e5e   0065
0e5f   006d
0e60   006f
0e61   0072
0e62   0079
0e63   0020
0e64   0061
0e65   0063
0e66   0063
0e67   0065
0e68   0073
0e69   0073
0e6a   0020
0e6b   0028
0e6c   0074
0e6d   006f
0e6e   0067
0e6f   0067
0e70   006c
0e71   0065
0e72   0029
0e73   0000
0e74   0020   dt " B = Memory byte mode (toggle)";
0e75   0042
0e76   0020
0e77   003d
0e78   0020
0e79   004d
0e7a   0065
0e7b   006d
0e7c   006f
0e7d   0072
0e7e   0079
0e7f   0020
0e80   0062
0e81   0079
0e82   0074
0e83   0065
0e84   0020
0e85   006d
0e86   006f
0e87   0064
0e88   0065
0e89   0020
0e8a   0028
0e8b   0074
0e8c   006f
0e8d   0067
0e8e   0067
0e8f   006c
0e90   0065
0e91   0029
0e92   0000
0e93   0020   dt " m = Memory read/write: (MEM ADDR)";
0e94   006d
0e95   0020
0e96   003d
0e97   0020
0e98   004d
0e99   0065
0e9a   006d
0e9b   006f
0e9c   0072
0e9d   0079
0e9e   0020
0e9f   0072
0ea0   0065
0ea1   0061
0ea2   0064
0ea3   002f
0ea4   0077
0ea5   0072
0ea6   0069
0ea7   0074
0ea8   0065
0ea9   003a
0eaa   0020
0eab   0028
0eac   004d
0ead   0045
0eae   004d
0eaf   0020
0eb0   0041
0eb1   0044
0eb2   0044
0eb3   0052
0eb4   0029
0eb5   0000
0eb6   0020   dt " ___ [m]addr[RET] read and set address" ;
0eb7   005f
0eb8   005f
0eb9   005f
0eba   0020
0ebb   005b
0ebc   006d
0ebd   005d
0ebe   0061
0ebf   0064
0ec0   0064
0ec1   0072
0ec2   005b
0ec3   0052
0ec4   0045
0ec5   0054
0ec6   005d
0ec7   0020
0ec8   0072
0ec9   0065
0eca   0061
0ecb   0064
0ecc   0020
0ecd   0061
0ece   006e
0ecf   0064
0ed0   0020
0ed1   0073
0ed2   0065
0ed3   0074
0ed4   0020
0ed5   0061
0ed6   0064
0ed7   0064
0ed8   0072
0ed9   0065
0eda   0073
0edb   0073
0edc   0000
0edd   0020   dt " ___ [m]addr,val[RET] write value" ;
0ede   005f
0edf   005f
0ee0   005f
0ee1   0020
0ee2   005b
0ee3   006d
0ee4   005d
0ee5   0061
0ee6   0064
0ee7   0064
0ee8   0072
0ee9   002c
0eea   0076
0eeb   0061
0eec   006c
0eed   005b
0eee   0052
0eef   0045
0ef0   0054
0ef1   005d
0ef2   0020
0ef3   0077
0ef4   0072
0ef5   0069
0ef6   0074
0ef7   0065
0ef8   0020
0ef9   0076
0efa   0061
0efb   006c
0efc   0075
0efd   0065
0efe   0000
0eff   0020   dt " d = dump memory from address 0";
0f00   0064
0f01   0020
0f02   003d
0f03   0020
0f04   0064
0f05   0075
0f06   006d
0f07   0070
0f08   0020
0f09   006d
0f0a   0065
0f0b   006d
0f0c   006f
0f0d   0072
0f0e   0079
0f0f   0020
0f10   0066
0f11   0072
0f12   006f
0f13   006d
0f14   0020
0f15   0061
0f16   0064
0f17   0064
0f18   0072
0f19   0065
0f1a   0073
0f1b   0073
0f1c   0020
0f1d   0030
0f1e   0000
0f1f   0020   dt " n = next 256 memory from last address";
0f20   006e
0f21   0020
0f22   003d
0f23   0020
0f24   006e
0f25   0065
0f26   0078
0f27   0074
0f28   0020
0f29   0032
0f2a   0035
0f2b   0036
0f2c   0020
0f2d   006d
0f2e   0065
0f2f   006d
0f30   006f
0f31   0072
0f32   0079
0f33   0020
0f34   0066
0f35   0072
0f36   006f
0f37   006d
0f38   0020
0f39   006c
0f3a   0061
0f3b   0073
0f3c   0074
0f3d   0020
0f3e   0061
0f3f   0064
0f40   0064
0f41   0072
0f42   0065
0f43   0073
0f44   0073
0f45   0000
0f46   0020   dt " f = fill memory with value + increment";
0f47   0066
0f48   0020
0f49   003d
0f4a   0020
0f4b   0066
0f4c   0069
0f4d   006c
0f4e   006c
0f4f   0020
0f50   006d
0f51   0065
0f52   006d
0f53   006f
0f54   0072
0f55   0079
0f56   0020
0f57   0077
0f58   0069
0f59   0074
0f5a   0068
0f5b   0020
0f5c   0076
0f5d   0061
0f5e   006c
0f5f   0075
0f60   0065
0f61   0020
0f62   002b
0f63   0020
0f64   0069
0f65   006e
0f66   0063
0f67   0072
0f68   0065
0f69   006d
0f6a   0065
0f6b   006e
0f6c   0074
0f6d   0000
0f6e   0020   dt " ___ addr,value = aaaa,vvvv (comma or space)";
0f6f   005f
0f70   005f
0f71   005f
0f72   0020
0f73   0061
0f74   0064
0f75   0064
0f76   0072
0f77   002c
0f78   0076
0f79   0061
0f7a   006c
0f7b   0075
0f7c   0065
0f7d   0020
0f7e   003d
0f7f   0020
0f80   0061
0f81   0061
0f82   0061
0f83   0061
0f84   002c
0f85   0076
0f86   0076
0f87   0076
0f88   0076
0f89   0020
0f8a   0028
0f8b   0063
0f8c   006f
0f8d   006d
0f8e   006d
0f8f   0061
0f90   0020
0f91   006f
0f92   0072
0f93   0020
0f94   0073
0f95   0070
0f96   0061
0f97   0063
0f98   0065
0f99   0029
0f9a   0000
0f9b   0020   dt " l = memory length and increment";
0f9c   006c
0f9d   0020
0f9e   003d
0f9f   0020
0fa0   006d
0fa1   0065
0fa2   006d
0fa3   006f
0fa4   0072
0fa5   0079
0fa6   0020
0fa7   006c
0fa8   0065
0fa9   006e
0faa   0067
0fab   0074
0fac   0068
0fad   0020
0fae   0061
0faf   006e
0fb0   0064
0fb1   0020
0fb2   0069
0fb3   006e
0fb4   0063
0fb5   0072
0fb6   0065
0fb7   006d
0fb8   0065
0fb9   006e
0fba   0074
0fbb   0000
0fbc   0020   dt " ___ length,increment = llll,iiii (comma or space)";
0fbd   005f
0fbe   005f
0fbf   005f
0fc0   0020
0fc1   006c
0fc2   0065
0fc3   006e
0fc4   0067
0fc5   0074
0fc6   0068
0fc7   002c
0fc8   0069
0fc9   006e
0fca   0063
0fcb   0072
0fcc   0065
0fcd   006d
0fce   0065
0fcf   006e
0fd0   0074
0fd1   0020
0fd2   003d
0fd3   0020
0fd4   006c
0fd5   006c
0fd6   006c
0fd7   006c
0fd8   002c
0fd9   0069
0fda   0069
0fdb   0069
0fdc   0069
0fdd   0020
0fde   0028
0fdf   0063
0fe0   006f
0fe1   006d
0fe2   006d
0fe3   0061
0fe4   0020
0fe5   006f
0fe6   0072
0fe7   0020
0fe8   0073
0fe9   0070
0fea   0061
0feb   0063
0fec   0065
0fed   0029
0fee   0000
0fef   0020   dt " ___ aaaa,vvvv,llll,iiii mandatory 4 digits";
0ff0   005f
0ff1   005f
0ff2   005f
0ff3   0020
0ff4   0061
0ff5   0061
0ff6   0061
0ff7   0061
0ff8   002c
0ff9   0076
0ffa   0076
0ffb   0076
0ffc   0076
0ffd   002c
0ffe   006c
0fff   006c
1000   006c
1001   006c
1002   002c
1003   0069
1004   0069
1005   0069
1006   0069
1007   0020
1008   006d
1009   0061
100a   006e
100b   0064
100c   0061
100d   0074
100e   006f
100f   0072
1010   0079
1011   0020
1012   0034
1013   0020
1014   0064
1015   0069
1016   0067
1017   0069
1018   0074
1019   0073
101a   0000
101b   0000   dt "";
101c   007c   dt "| Register Commands |";
101d   0020
101e   0052
101f   0065
1020   0067
1021   0069
1022   0073
1023   0074
1024   0065
1025   0072
1026   0020
1027   0043
1028   006f
1029   006d
102a   006d
102b   0061
102c   006e
102d   0064
102e   0073
102f   0020
1030   007c
1031   0000
1032   0020   dt " w = Write Output Port/Register: (full address)";
1033   0077
1034   0020
1035   003d
1036   0020
1037   0057
1038   0072
1039   0069
103a   0074
103b   0065
103c   0020
103d   004f
103e   0075
103f   0074
1040   0070
1041   0075
1042   0074
1043   0020
1044   0050
1045   006f
1046   0072
1047   0074
1048   002f
1049   0052
104a   0065
104b   0067
104c   0069
104d   0073
104e   0074
104f   0065
1050   0072
1051   003a
1052   0020
1053   0028
1054   0066
1055   0075
1056   006c
1057   006c
1058   0020
1059   0061
105a   0064
105b   0064
105c   0072
105d   0065
105e   0073
105f   0073
1060   0029
1061   0000
1062   0020   dt " ___ [w]addr[RET] read port";
1063   005f
1064   005f
1065   005f
1066   0020
1067   005b
1068   0077
1069   005d
106a   0061
106b   0064
106c   0064
106d   0072
106e   005b
106f   0052
1070   0045
1071   0054
1072   005d
1073   0020
1074   0072
1075   0065
1076   0061
1077   0064
1078   0020
1079   0070
107a   006f
107b   0072
107c   0074
107d   0000
107e   0020   dt " ___ [w]addr,val[RET] delimeter comma";
107f   005f
1080   005f
1081   005f
1082   0020
1083   005b
1084   0077
1085   005d
1086   0061
1087   0064
1088   0064
1089   0072
108a   002c
108b   0076
108c   0061
108d   006c
108e   005b
108f   0052
1090   0045
1091   0054
1092   005d
1093   0020
1094   0064
1095   0065
1096   006c
1097   0069
1098   006d
1099   0065
109a   0074
109b   0065
109c   0072
109d   0020
109e   0063
109f   006f
10a0   006d
10a1   006d
10a2   0061
10a3   0000
10a4   0020   dt " ___ [w]addr val[RET] delimiter space";
10a5   005f
10a6   005f
10a7   005f
10a8   0020
10a9   005b
10aa   0077
10ab   005d
10ac   0061
10ad   0064
10ae   0064
10af   0072
10b0   0020
10b1   0076
10b2   0061
10b3   006c
10b4   005b
10b5   0052
10b6   0045
10b7   0054
10b8   005d
10b9   0020
10ba   0064
10bb   0065
10bc   006c
10bd   0069
10be   006d
10bf   0069
10c0   0074
10c1   0065
10c2   0072
10c3   0020
10c4   0073
10c5   0070
10c6   0061
10c7   0063
10c8   0065
10c9   0000
10ca   0020   dt " ___ [w]addr'n'val[RET] one's complement";
10cb   005f
10cc   005f
10cd   005f
10ce   0020
10cf   005b
10d0   0077
10d1   005d
10d2   0061
10d3   0064
10d4   0064
10d5   0072
10d6   0027
10d7   006e
10d8   0027
10d9   0076
10da   0061
10db   006c
10dc   005b
10dd   0052
10de   0045
10df   0054
10e0   005d
10e1   0020
10e2   006f
10e3   006e
10e4   0065
10e5   0027
10e6   0073
10e7   0020
10e8   0063
10e9   006f
10ea   006d
10eb   0070
10ec   006c
10ed   0065
10ee   006d
10ef   0065
10f0   006e
10f1   0074
10f2   0000
10f3   0020   dt " ___ [w]addr'-'val[RET] two's complement";
10f4   005f
10f5   005f
10f6   005f
10f7   0020
10f8   005b
10f9   0077
10fa   005d
10fb   0061
10fc   0064
10fd   0064
10fe   0072
10ff   0027
1100   002d
1101   0027
1102   0076
1103   0061
1104   006c
1105   005b
1106   0052
1107   0045
1108   0054
1109   005d
110a   0020
110b   0074
110c   0077
110d   006f
110e   0027
110f   0073
1110   0020
1111   0063
1112   006f
1113   006d
1114   0070
1115   006c
1116   0065
1117   006d
1118   0065
1119   006e
111a   0074
111b   0000
111c   0000   dt "";
111d   005b   dt "[s/c/t/i]regaddr,bit[RET] (bit=0 to F)";
111e   0073
111f   002f
1120   0063
1121   002f
1122   0074
1123   002f
1124   0069
1125   005d
1126   0072
1127   0065
1128   0067
1129   0061
112a   0064
112b   0064
112c   0072
112d   002c
112e   0062
112f   0069
1130   0074
1131   005b
1132   0052
1133   0045
1134   0054
1135   005d
1136   0020
1137   0028
1138   0062
1139   0069
113a   0074
113b   003d
113c   0030
113d   0020
113e   0074
113f   006f
1140   0020
1141   0046
1142   0029
1143   0000
1144   005b   dt "[a/o/e] regaddr,mask[RET]";
1145   0061
1146   002f
1147   006f
1148   002f
1149   0065
114a   005d
114b   0020
114c   0072
114d   0065
114e   0067
114f   0061
1150   0064
1151   0064
1152   0072
1153   002c
1154   006d
1155   0061
1156   0073
1157   006b
1158   005b
1159   0052
115a   0045
115b   0054
115c   005d
115d   0000
115e   0000   dt "";
115f   0020   dt " b = set register Base address";
1160   0062
1161   0020
1162   003d
1163   0020
1164   0073
1165   0065
1166   0074
1167   0020
1168   0072
1169   0065
116a   0067
116b   0069
116c   0073
116d   0074
116e   0065
116f   0072
1170   0020
1171   0042
1172   0061
1173   0073
1174   0065
1175   0020
1176   0061
1177   0064
1178   0064
1179   0072
117a   0065
117b   0073
117c   0073
117d   0000
117e   0020   dt " r = Read 16 Registers(BASE ADDR + 0 to F)";
117f   0072
1180   0020
1181   003d
1182   0020
1183   0052
1184   0065
1185   0061
1186   0064
1187   0020
1188   0031
1189   0036
118a   0020
118b   0052
118c   0065
118d   0067
118e   0069
118f   0073
1190   0074
1191   0065
1192   0072
1193   0073
1194   0028
1195   0042
1196   0041
1197   0053
1198   0045
1199   0020
119a   0041
119b   0044
119c   0044
119d   0052
119e   0020
119f   002b
11a0   0020
11a1   0030
11a2   0020
11a3   0074
11a4   006f
11a5   0020
11a6   0046
11a7   0029
11a8   0000
11a9   007c   dt "|||";
11aa   007c
11ab   007c
11ac   0000
11ad   0003   dw ETX;
11ae   11ae   dw zend_code;
11af   0000   memptr: dw 0 ; 
11b0   0000   memptrlast: dw 0 ; 
11b1   0001   echomode: dw 1 ; 
11b2   0000   mycounter: dw 0 ; 
11b3   0000   myled: dw 0 ; 
11b4   0000   hex1val: dw 0 ; 
11b5   0000   hex2val: dw 0 ; 
11b6   0000   cvalue1: dw 0 ; 
11b7   0000   cvalue2: dw 0 ; 
11b8   0000   inpchar: dw 0 ; 
11b9   0000   inpaddr: dw 0 ; 
11ba   0000   outdata: dw 0 ; 
11bb   0000   uartstat: dw 0 ; 
11bc   0077   bitop: dw "w" ;
11bd   0000   delimeter: dw 0 ;
11be   0000   temp0: dw 0 ; 
11bf   0000   regptr: dw BASEREGIO ; 
11c0   1220   buff_addr: dw tempvar1 ; 
11c1   000f   buff_len: dw 15 ; 
11c2   0000   buff_addrx: dw 0 ;
11c3   0000   buff_value: dw 0 ;
11c4   0000   buff_inc: dw 0 ;
11c5   0000   memode: dw 0 ; 
11c6   0000   memacc: dw 0 ; 
11c7   0000   dw 0 ; 
11c8   0000   tmr1msec: dw 0 ; 
11c9   0064   tmr1value: dw 100 ; 
11ca   0001   irqmask: dw 1 ; 
11cb   06fb   ssm_pst: dw kpst00 ; 
11cc   06fb   ssm_lst: dw kpst00 ; 
11cd   0608   pjump: dw myapp ; 
11ce   0000   dw 0 ; 
11cf   0000   memop: dw 0 ; 
11d0   0000   tmr1year: dw 0 ; 
11d1   0000   tmr1month: dw 0 ; 
11d2   0000   tmr1date: dw 0 ; 
11d3   0000   tmr1hour: dw 0 ; 
11d4   0000   tmr1min: dw 0 ; 
11d5   0000   tmr1sec: dw 0 ; 
11d6   0000   dw 0 ; 
11d7   0000   dw 0 ; 
3f00   0046   cli ; 
3f01   0000   nop ; 
3f02   043f   uport f4 ; 
3f03   073f   boot_p: uport f7 ; 
3f04   0121   ldrv r1,"<" ; 
3f05   003c
3f06   1a35   outpp r1,pA,0 ; 
3f07   0000
3f08   b133   boot_ch: inpp r1,pB ; 
3f09   010b   andv r1,RXDVLD ; 
3f0a   0080
3f0b   1037   bra z,boot_ch ; 
3f0c   fffc
3f0d   a133   inpp r1,pA ; 
3f0e   010b   andv r1,'h0FF ; 
3f0f   00ff
3f10   1113   cmprv r1,"#" ; 
3f11   0023
3f12   1037   bra e,boot_fh ; 
3f13   0007
3f14   1113   cmprv r1,ESC ; 
3f15   001b
3f16   9037   bra ne,boot_ch ; 
3f17   fff1
3f18   0039   jmp end_boot ; 
3f19   3f55
3f1a   073e   boot_fh: uflag f7 ; 
3f1b   873f   uport t7 ; 
3f1c   012e   boot_p0: ldpv p1,0 ;
3f1d   0000
3f1e   021f   boot_p1: ldcv c2,3 ;
3f1f   0003
3f20   220e   xor r2,r2 ; 
3f21   0217   boot_p2: shl4 r2 ;
3f22   b133   boot_p3: inpp r1,pB ; 
3f23   010b   andv r1,RXDVLD ; 
3f24   0080
3f25   1037   bra z,boot_p3 ; 
3f26   fffc
3f27   a133   inpp r1,pA ; 
3f28   010b   andv r1,'h0FF ; 
3f29   00ff
3f2a   0107   subv r1,'h030 ; 
3f2b   0030
3f2c   3037   bra s,boot_p3 ; 
3f2d   fff5
3f2e   1113   cmprv r1,9 ;
3f2f   0009
3f30   f037   bra ls,boot_p4 ;
3f31   0005
3f32   010b   andv r1,'h00F ; 
3f33   000f
3f34   0103   addv r1,9 ;
3f35   0009
3f36   120c   boot_p4: or r2,r1 ;
3f37   0238   dcjnz c2,boot_p2 ;
3f38   3f21
3f39   0000   nop ; 
3f3a   8739   jmp t7,boot_p4b ; 
3f3b   3f42
3f3c   2a19   mvrr r2,ra ; 
3f3d   a028   str ra,prog_lng ; 
3f3e   3f8e
3f3f   873e   uflag t7 ; 
3f40   0037   bra boot_p0 ;
3f41   ffdb
3f42   111b   boot_p4b:mvpr p1,r1 ; 
3f43   1113   cmprv r1,boot_p ;
3f44   3f03
3f45   a037   bra hs,boot_p5 ;
3f46   0004
3f47   212b   strpi r2,p1 ; 
3f48   0037   bra boot_p6 ;
3f49   0005
3f4a   0021   boot_p5: ldrv r0,"*" ;
3f4b   002a
3f4c   0037   bra boot_p7 ;
3f4d   0003
3f4e   0021   boot_p6: ldrv r0,"." ;
3f4f   002e
3f50   0a35   boot_p7: outpp r0,pA,0 ;
3f51   0000
3f52   0a11   dec ra ;
3f53   9037   bra nz,boot_p1 ;
3f54   ffca
3f55   102f   end_boot:stp p1,prog_cnt ;
3f56   3f8f
3f57   0021   ldrv r0,"#" ;
3f58   0023
3f59   0a35   outpp r0,pA,0 ;
3f5a   0000
3f5b   0121   end_loop:ldrv r1,0 ; 
3f5c   0000
3f5d   073f   uport f7 ; 
3f5e   0039   jmp reset_v ;
3f5f   0000
3f60   0c20   boot_r: ldr rc,prog_lng ;
3f61   3f8e
3f62   012e   ldpv p1,0 ;
3f63   0000
3f64   021f   boot_r1: ldcv c2,3 ;
3f65   0003
3f66   1224   ldrpi r2,p1 ;
3f67   3215   boot_r2: shl r,r2 ;
3f68   3215   shl r,r2 ;
3f69   3215   shl r,r2 ;
3f6a   3215   shl r,r2 ;
3f6b   2119   mvrr r2,r1 ;
3f6c   010b   andv r1,'h00F ;
3f6d   000f
3f6e   0103   addv r1,'h030 ;
3f6f   0030
3f70   1113   cmprv r1,'h039 ;
3f71   0039
3f72   f037   bra ls,boot_r3 ;
3f73   0003
3f74   0103   addv r1,'h027 ;
3f75   0027
3f76   b333   boot_r3: inpp r3,pB ; 
3f77   030b   andv r3,TXFULL ; 
3f78   0040
3f79   9037   bra nz,boot_r3 ; 
3f7a   fffc
3f7b   1a35   outpp r1,pA,0 ;
3f7c   0000
3f7d   0238   dcjnz c2,boot_r2 ;
3f7e   3f67
3f7f   0000   nop ; 
3f80   b333   boot_r4: inpp r3,pB ; 
3f81   030b   andv r3,TXFULL ; 
3f82   0040
3f83   9037   bra nz,boot_r4 ; 
3f84   fffc
3f85   0321   ldrv r3,'h00A ;
3f86   000a
3f87   3a35   outpp r3,pA,0 ;
3f88   0000
3f89   0c11   dec rc ; 
3f8a   9037   bra nz,boot_r1 ;
3f8b   ffd9
3f8c   0039   jmp end_loop ;
3f8d   3f5b
3f8e   0000   prog_lng:dw 0 ; 
3f8f   0000   prog_cnt:dw 0 ; 